Search.setIndex({"docnames": ["algorithms", "algorithms/sampling", "generators/directed", "generators/undirected", "graphs", "index", "mechanisms", "statistics", "visualizations"], "filenames": ["algorithms.rst", "algorithms/sampling.rst", "generators/directed.rst", "generators/undirected.rst", "graphs.rst", "index.rst", "mechanisms.rst", "statistics.rst", "visualizations.rst"], "titles": ["Algorithms", "Sampling", "Directed Graphs", "Undirected Graphs", "Graphs", "Network Inequality", "Mechanisms", "Statistics", "Visualization"], "terms": {"sampl": [0, 2, 5], "randomnod": [0, 1, 5], "randomedg": [0, 1, 5], "randomneighbor": [0, 1, 5], "degreerank": [0, 1, 5], "degreegrouprank": [0, 1, 5], "partialcrawl": [0, 1, 5], "class": [1, 2, 3, 6, 7, 8], "netin": [1, 2, 3, 5, 6, 7, 8], "g": [1, 3, 5, 7, 8], "graph": [1, 5, 6, 7, 8], "pseed": 1, "float": [1, 2, 3, 6, 7, 8], "max_tri": 1, "int": [1, 2, 3, 6, 7, 8], "20": 1, "random_se": 1, "object": [1, 2, 3, 6], "none": [1, 2, 3, 6, 7, 8], "kwarg": [1, 2, 7, 8], "base": [1, 2, 3, 5, 6], "method": 1, "digraph": [1, 2, 4, 5, 7], "global": 1, "network": [1, 2, 3, 7], "fraction": [1, 2, 3, 6, 7, 8], "seed": [1, 2, 3, 6], "maximum": [1, 2, 3, 6, 7], "number": [1, 2, 3, 6, 7, 8], "tri": 1, "subgraph": 1, "enough": 1, "edg": [1, 2, 3, 6, 7, 8], "random": [1, 2, 3, 6], "gener": [1, 2, 3, 6], "dict": [1, 2, 3, 6, 7, 8], "addit": [1, 2, 7, 8], "The": [1, 2, 3, 7, 8], "origin": 1, "pass": [1, 7, 8], "i": [1, 2, 3, 5, 6, 7, 8], "modifi": 1, "creat": [1, 2, 3, 6], "copi": 1, "store": 1, "self": 1, "thi": [1, 2, 3, 6, 8], "doe": [1, 6], "info": [1, 6], "print": [1, 8], "summari": 1, "train": 1, "includ": [1, 8], "its": [1, 2], "attribut": [1, 7], "properti": [1, 2, 3, 6, 8], "method_nam": 1, "str": [1, 7, 8], "name": [1, 7, 8], "new": [1, 2, 3], "instanc": [1, 2, 3], "respect": 1, "call": 1, "extract_subgraph": 1, "node": [1, 2, 3, 6, 7, 8], "neighbor": [1, 6], "degre": [1, 2, 3, 7, 8], "rank": [1, 2, 3, 5, 7, 8], "order": 1, "option": 1, "asc": 1, "desc": 1, "group": [1, 2, 6, 8], "per": [1, 8], "partial": 1, "crawl": 1, "yang2017": 1, "yang": 1, "b": [1, 3], "ribeiro": 1, "j": [1, 3], "nevil": 1, "should": [1, 3, 6], "we": 1, "Be": 1, "confid": 1, "peer": 1, "effect": 1, "estim": 1, "from": [1, 2, 3, 6, 7, 8], "social": [1, 2, 3, 5], "icwsm": 1, "vol": 1, "11": 1, "No": 1, "1": [1, 2, 3, 6, 7, 8], "pp": [1, 2, 3], "708": 1, "711": 1, "2017": 1, "n": [2, 3, 6], "f_m": [2, 3, 6, 7], "d": 2, "plo_m": 2, "model": [2, 3, 6], "minimum": [2, 3, 6, 7], "2": [2, 3, 6], "densiti": [2, 7], "0": [2, 3, 6, 7, 8], "minor": [2, 3, 6, 7, 8], "activ": 2, "out": 2, "power": [2, 7], "law": [2, 7], "expon": [2, 3], "major": [2, 3, 6, 7], "initi": [2, 3], "sourc": [2, 3, 6], "ar": [2, 3, 6, 7, 8], "select": [2, 3, 6], "given": [2, 3, 6, 7, 8], "target": [2, 3, 6], "depend": [2, 3], "chosen": [2, 3], "mechan": [2, 3, 5], "format": [2, 3, 6], "dpah": [2, 4, 5], "preferenti": [2, 3, 6], "attach": [2, 3, 6], "homophili": [2, 3, 5, 6], "h": [2, 6], "see": [2, 7], "dpa": [2, 4, 5], "dh": [2, 4, 5], "espin": [2, 7], "noboa2022": [2, 7], "esp\u00edn": 2, "noboa": 2, "c": [2, 3], "wagner": [2, 3], "m": [2, 3], "strohmaier": [2, 3], "f": 2, "karimi": [2, 3], "inequ": [2, 7, 8], "recommend": 2, "algorithm": [2, 5], "scientif": [2, 3], "report": [2, 3], "12": 2, "14": 2, "2022": 2, "karimi2018": [2, 3], "g\u00e9noi": [2, 3], "p": [2, 3], "singer": [2, 3], "influenc": [2, 3], "8": [2, 3], "11077": [2, 3], "2018": [2, 3], "barabasialbert1999": [2, 3], "barabasi": [2, 3], "r": [2, 3], "albert": [2, 3], "emerg": [2, 3, 6], "scale": [2, 3, 8], "scienc": [2, 3], "286": [2, 3], "509": [2, 3], "512": [2, 3], "1999": [2, 3], "calculate_in_degree_powerlaw_expon": 2, "tupl": [2, 3, 6, 7, 8], "distribut": [2, 3, 7, 8], "calculate_out_degree_powerlaw_expon": 2, "A": [2, 8], "grown": [2, 3], "randomli": 2, "replac": 2, "each": [2, 3, 7, 8], "drawn": [2, 3], "h_mm": [2, 3, 6], "5": [2, 3], "ba": [2, 3], "erdo": 2, "renyi": 2, "dph": 2, "get_activity_distribut": 2, "arrai": [2, 3, 6, 7], "all": [2, 3, 7, 8], "np": [2, 3, 6, 7], "get_expected_dens": 2, "expect": [2, 3], "input": [2, 3, 6, 7], "get_expected_number_of_edg": [2, 3], "get_expected_powerlaw_out_degree_major": 2, "get_expected_powerlaw_out_degree_minor": 2, "get_metadata_as_dict": [2, 3, 5, 6], "metadata": [2, 3, 6, 8], "get_sourc": 2, "us": [2, 3, 7, 8], "ha": 2, "length": 2, "probabl": [2, 3, 6, 7], "get_target": [2, 3, 5, 6], "edge_list": 2, "dictionari": [2, 3, 6], "union": [2, 7, 8], "must": 2, "have": 2, "out_degre": 2, "older": 2, "more": [2, 7], "like": 2, "get": [2, 3, 7, 8], "link": 2, "get_target_prob": [2, 3, 5, 6], "target_set": [2, 3, 6], "set": [2, 3, 5, 6, 7, 8], "special_target": [2, 3, 6], "iter": [2, 3, 6], "connect": [2, 3, 6], "id": [2, 3, 6], "here": [2, 7], "special": [2, 3, 6], "consid": [2, 3], "It": [2, 3, 5, 8], "follow": 2, "an": [2, 3, 6], "erdosrenyi1959": 2, "erd\u0151": 2, "r\u00e9nyi": 2, "On": 2, "publ": 2, "math": 2, "6": [2, 7], "290": 2, "1959": 2, "info_comput": [2, 3, 5, 6], "show": [2, 3, 6, 8], "comput": [2, 3, 6, 7], "info_param": [2, 3, 5, 6], "within": [2, 6], "via": [2, 3], "prob": [2, 3], "infer_homophily_valu": [2, 3, 5, 6], "infer": [2, 3, 5, 6, 7], "analyt": [2, 3, 6], "valu": [2, 3, 6, 7, 8], "get_in_degre": 2, "calcul": [2, 7], "taken": 2, "in_degre": 2, "popul": 2, "while": 2, "where": [2, 3], "which": [2, 7], "version": 2, "e": [2, 3, 5, 6, 7, 8], "between": [2, 3, 6, 7, 8], "level": [2, 3], "undigraph": [3, 4, 5], "k": [3, 7, 8], "Then": 3, "everytim": 3, "pa": [3, 4, 5], "pah": [3, 4, 5], "patc": [3, 4, 5], "triadic": [3, 6], "closur": [3, 6], "holmekim2002": 3, "patch": [3, 4, 5], "holm": 3, "kim": 3, "grow": 3, "free": 3, "tunabl": 3, "cluster": 3, "phy": 3, "rev": 3, "2002": 3, "calculate_degree_powerlaw_expon": 3, "powerlaw": [3, 7, 8], "pl_m": 3, "fit_degree_powerlaw": 3, "fit": [3, 7, 8], "fit_m": 3, "either": 3, "For": 3, "candid": 3, "uniformli": 3, "triad": 3, "close": 3, "otherwis": [3, 8], "vari": 3, "rang": 3, "heterophil": 3, "homophil": 3, "neutral": 3, "similarli": 3, "full": 3, "tc": [3, 6], "get_expected_minimum_degre": 3, "pick": [3, 6], "newli": [3, 6], "ad": [3, 6], "potenti": [3, 6], "static": 3, "overrid": 3, "smaller": 3, "denser": 3, "proport": 3, "inform": 3, "": [3, 8], "get_special_target": [3, 5, 6], "empti": [3, 6], "get_target_probabilities_regular": 3, "infer_triadic_closur": 3, "approxim": 3, "update_special_target": [3, 5, 6], "idx_target": [3, 6], "updat": [3, 6], "index": [3, 5, 6], "similar": [3, 6], "h_": 3, "known": 3, "solut": 3, "deriv": 3, "p_": 3, "triadicclosur": [3, 5, 6], "still": 3, "work": 3, "progress": 3, "fulli": 3, "implement": [3, 7], "yet": [3, 6], "ndarrai": [3, 7], "direct": [4, 5], "undirect": [4, 5], "python": 5, "packag": 5, "analysi": 5, "networkx": 5, "provid": 5, "function": [5, 8], "studi": 5, "get_triadic_closur": [5, 6], "set_triadic_closur": [5, 6], "get_homophily_between_source_and_target": [5, 6], "get_homophily_major": [5, 6], "get_homophily_minor": [5, 6], "set_homophily_major": [5, 6], "set_homophily_minor": [5, 6], "statist": 5, "fit_power_law": [5, 7], "get_ccdf": [5, 7], "get_cdf": [5, 7], "get_dispar": [5, 7], "get_fraction_of_minor": [5, 7], "get_gini_coeffici": [5, 7], "get_pdf": [5, 7], "get_average_degre": [5, 7], "get_edge_type_count": [5, 7], "get_min_degre": [5, 7], "get_minority_fract": [5, 7], "get_node_attribut": [5, 7], "get_similitud": [5, 7], "get_fraction_of_minority_in_rank": [5, 7], "get_gini_in_rank": [5, 7], "get_ranking_inequ": [5, 7], "get_ranking_inequality_class": [5, 7], "get_ranking_inequity_class": [5, 7], "gini": [5, 7, 8], "visual": 5, "plot_dispar": [5, 8], "plot_distribut": [5, 8], "plot_fraction_of_minor": [5, 8], "plot_gini_coeffici": [5, 8], "plot_graph": [5, 8], "plot_powerlaw_fit": [5, 8], "reset_styl": [5, 8], "set_paper_styl": [5, 8], "modul": 5, "search": 5, "page": 5, "dynam": 6, "regular": 6, "when": 6, "multipl": [6, 8], "two": [6, 7], "hop": 6, "directli": 6, "These": 6, "mix": 6, "matrix": 6, "obj": 6, "stat": 7, "data": [7, 8], "list": [7, 8], "discret": 7, "bool": [7, 8], "true": [7, 8], "xmin": 7, "xmax": 7, "whether": 7, "argument": [7, 8], "constructor": 7, "df": 7, "panda": [7, 8], "core": 7, "frame": 7, "datafram": [7, 8], "x": [7, 8], "total": 7, "numpi": 7, "complementari": 7, "cumul": 7, "ccdf": [7, 8], "pd": [7, 8], "contain": 7, "column": [7, 8], "amount": [7, 8], "normal": [7, 8], "hold": 7, "y": [7, 8], "cdf": [7, 8], "dispar": [7, 8], "top": [7, 8], "coeffici": [7, 8], "averag": [7, 8], "nx": 7, "class_attribut": 7, "fals": [7, 8], "counter": 7, "type": [7, 8], "count": 7, "If": [7, 8], "label": [7, 8], "assum": 7, "binari": 7, "same": [7, 8], "similitud": 7, "entir": 7, "op": 7, "100": 7, "gini_glob": 7, "cut": [7, 8], "3": 7, "determin": 7, "equal": 7, "moder": 7, "skew": 7, "By": 7, "default": [7, 8], "me": 7, "mean": [7, 8], "error": [7, 8], "distanc": 7, "beta": [7, 8], "measur": 7, "threshold": 7, "fair": [7, 8], "over": [7, 8], "repres": [7, 8], "under": [7, 8], "detail": 7, "05": 7, "viz": 8, "handler": 8, "col_nam": 8, "fn": 8, "plot": 8, "file": 8, "save": 8, "get_x_y_from_df_fnc": 8, "callabl": 8, "filenam": 8, "figur": 8, "nc": 8, "grid": 8, "cell_siz": 8, "size": 8, "cell": 8, "inch": 8, "first": 8, "width": 8, "second": 8, "height": 8, "scatter": 8, "sharex": 8, "axi": 8, "share": 8, "subplot": 8, "sharei": 8, "ylabel": 8, "xlabel": 8, "xlim": 8, "ylim": 8, "limit": 8, "hue": 8, "common_norm": 8, "sum": 8, "log_scal": 8, "log": 8, "hline_fnc": 8, "horizont": 8, "line": 8, "vline_fnc": 8, "vertic": 8, "suptitl": 8, "titl": 8, "whole": 8, "gini_fnc": 8, "me_fnc": 8, "smooth": 8, "area": 8, "represent": 8, "class_label_legend": 8, "legend": 8, "And": 8, "sent": 8, "ax": 8, "matplotlib": 8, "share_po": 8, "ignore_singleton": 8, "one": 8, "posit": 8, "onli": 8, "node_s": 8, "node_shap": 8, "shape": 8, "o": 8, "circl": 8, "squar": 8, "edge_width": 8, "edge_styl": 8, "style": 8, "solid": 8, "dash": 8, "edge_arrow": 8, "arrow": 8, "arrow_styl": 8, "fill": 8, "arrow_s": 8, "subplots_adjust": 8, "savefig": 8, "kind": 8, "empir": 8, "One": 8, "pdf": 8, "among": 8, "verbos": 8, "wspace": 8, "reserv": 8, "blank": 8, "space": 8, "express": 8, "hspace": 8, "white": 8, "suptil": 8, "color": 8, "bbox": 8, "bound": 8, "box": 8, "four": 8, "left": 8, "bottom": 8, "right": 8, "coordin": 8, "loc": 8, "locat": 8, "best": 8, "upper": 8, "lower": 8, "center": 8, "reset": 8, "font_scal": 8, "paper": 8, "font": 8, "famili": 8, "serif": 8, "allow": 8, "adjust": 8, "factor": 8}, "objects": {"": [[5, 0, 0, "-", "netin"]], "netin": [[2, 1, 1, "", "DH"], [2, 1, 1, "", "DPA"], [2, 1, 1, "", "DPAH"], [2, 1, 1, "", "DiGraph"], [6, 1, 1, "", "Homophily"], [3, 1, 1, "", "PA"], [3, 1, 1, "", "PAH"], [3, 1, 1, "", "PATC"], [3, 1, 1, "", "PATCH"], [6, 1, 1, "", "TriadicClosure"], [3, 1, 1, "", "UnDiGraph"], [0, 0, 0, "-", "sampling"]], "netin.DH": [[2, 2, 1, "", "get_target_probabilities"], [2, 2, 1, "", "infer_homophily_values"], [2, 2, 1, "", "info_computed"], [2, 2, 1, "", "info_params"]], "netin.DPA": [[2, 2, 1, "", "get_in_degree"], [2, 2, 1, "", "get_target_probabilities"]], "netin.DPAH": [[2, 2, 1, "", "get_target_probabilities"], [2, 2, 1, "", "infer_homophily_values"], [2, 2, 1, "", "info_computed"], [2, 2, 1, "", "info_params"]], "netin.DiGraph": [[2, 2, 1, "", "calculate_in_degree_powerlaw_exponents"], [2, 2, 1, "", "calculate_out_degree_powerlaw_exponents"], [2, 2, 1, "", "generate"], [2, 2, 1, "", "get_activity_distribution"], [2, 2, 1, "", "get_expected_density"], [2, 2, 1, "", "get_expected_number_of_edges"], [2, 2, 1, "", "get_expected_powerlaw_out_degree_majority"], [2, 2, 1, "", "get_expected_powerlaw_out_degree_minority"], [2, 2, 1, "", "get_metadata_as_dict"], [2, 2, 1, "", "get_sources"], [2, 2, 1, "", "get_target"], [2, 2, 1, "", "get_target_probabilities"], [2, 2, 1, "", "info_computed"], [2, 2, 1, "", "info_params"]], "netin.Homophily": [[6, 2, 1, "", "get_homophily_between_source_and_target"], [6, 2, 1, "", "get_homophily_majority"], [6, 2, 1, "", "get_homophily_minority"], [6, 2, 1, "", "get_metadata_as_dict"], [6, 2, 1, "", "get_target"], [6, 2, 1, "", "get_target_probabilities"], [6, 2, 1, "", "infer_homophily_values"], [6, 2, 1, "", "info_computed"], [6, 2, 1, "", "info_params"], [6, 2, 1, "", "set_homophily_majority"], [6, 2, 1, "", "set_homophily_minority"]], "netin.PA": [[3, 2, 1, "", "fit"], [3, 2, 1, "", "get_target_probabilities"]], "netin.PAH": [[3, 2, 1, "", "fit"], [3, 2, 1, "", "get_metadata_as_dict"], [3, 2, 1, "", "get_target_probabilities"], [3, 2, 1, "", "infer_homophily_values"], [3, 2, 1, "", "info_computed"], [3, 2, 1, "", "info_params"]], "netin.PATC": [[3, 2, 1, "", "fit"], [3, 2, 1, "", "get_metadata_as_dict"], [3, 2, 1, "", "get_special_targets"], [3, 2, 1, "", "get_target_probabilities"], [3, 2, 1, "", "get_target_probabilities_regular"], [3, 2, 1, "", "infer_triadic_closure"], [3, 2, 1, "", "info_params"], [3, 2, 1, "", "update_special_targets"]], "netin.PATCH": [[3, 2, 1, "", "get_metadata_as_dict"], [3, 2, 1, "", "get_special_targets"], [3, 2, 1, "", "get_target_probabilities"], [3, 2, 1, "", "get_target_probabilities_regular"], [3, 2, 1, "", "infer_homophily_values"], [3, 2, 1, "", "infer_triadic_closure"], [3, 2, 1, "", "info_computed"], [3, 2, 1, "", "info_params"]], "netin.TriadicClosure": [[6, 2, 1, "", "get_metadata_as_dict"], [6, 2, 1, "", "get_special_targets"], [6, 2, 1, "", "get_target"], [6, 2, 1, "", "get_target_probabilities"], [6, 2, 1, "", "get_triadic_closure"], [6, 2, 1, "", "info_computed"], [6, 2, 1, "", "info_params"], [6, 2, 1, "", "set_triadic_closure"], [6, 2, 1, "", "update_special_targets"]], "netin.UnDiGraph": [[3, 2, 1, "", "calculate_degree_powerlaw_exponents"], [3, 2, 1, "", "fit_degree_powerlaw"], [3, 2, 1, "", "generate"], [3, 2, 1, "", "get_expected_minimum_degree"], [3, 2, 1, "", "get_expected_number_of_edges"], [3, 2, 1, "", "get_metadata_as_dict"], [3, 2, 1, "", "get_target"], [3, 2, 1, "", "info_computed"], [3, 2, 1, "", "info_params"]], "netin.sampling": [[1, 1, 1, "", "DegreeGroupRank"], [1, 1, 1, "", "DegreeRank"], [1, 1, 1, "", "PartialCrawls"], [1, 1, 1, "", "RandomEdges"], [1, 1, 1, "", "RandomNeighbor"], [1, 1, 1, "", "RandomNodes"], [1, 1, 1, "", "Sampling"]], "netin.sampling.DegreeGroupRank": [[1, 3, 1, "", "method_name"], [1, 2, 1, "", "sampling"]], "netin.sampling.DegreeRank": [[1, 3, 1, "", "method_name"], [1, 2, 1, "", "sampling"]], "netin.sampling.PartialCrawls": [[1, 3, 1, "", "method_name"], [1, 2, 1, "", "sampling"]], "netin.sampling.RandomEdges": [[1, 3, 1, "", "method_name"], [1, 2, 1, "", "sampling"]], "netin.sampling.RandomNeighbor": [[1, 3, 1, "", "method_name"], [1, 2, 1, "", "sampling"]], "netin.sampling.RandomNodes": [[1, 3, 1, "", "method_name"], [1, 2, 1, "", "sampling"]], "netin.sampling.Sampling": [[1, 2, 1, "", "info"], [1, 3, 1, "", "method_name"], [1, 2, 1, "", "sampling"]], "netin.stats": [[7, 0, 0, "-", "distributions"], [7, 0, 0, "-", "networks"], [7, 0, 0, "-", "ranking"]], "netin.stats.distributions": [[7, 4, 1, "", "fit_power_law"], [7, 4, 1, "", "get_ccdf"], [7, 4, 1, "", "get_cdf"], [7, 4, 1, "", "get_disparity"], [7, 4, 1, "", "get_fraction_of_minority"], [7, 4, 1, "", "get_gini_coefficient"], [7, 4, 1, "", "get_pdf"]], "netin.stats.networks": [[7, 4, 1, "", "get_average_degree"], [7, 4, 1, "", "get_average_degrees"], [7, 4, 1, "", "get_edge_type_counts"], [7, 4, 1, "", "get_min_degree"], [7, 4, 1, "", "get_minority_fraction"], [7, 4, 1, "", "get_node_attributes"], [7, 4, 1, "", "get_similitude"]], "netin.stats.ranking": [[7, 4, 1, "", "get_fraction_of_minority_in_ranking"], [7, 4, 1, "", "get_gini_in_ranking"], [7, 4, 1, "", "get_ranking_inequality"], [7, 4, 1, "", "get_ranking_inequality_class"], [7, 4, 1, "", "get_ranking_inequity"], [7, 4, 1, "", "get_ranking_inequity_class"], [7, 4, 1, "", "gini"]], "netin.viz": [[8, 0, 0, "-", "handlers"]], "netin.viz.handlers": [[8, 4, 1, "", "plot_disparity"], [8, 4, 1, "", "plot_distribution"], [8, 4, 1, "", "plot_fraction_of_minority"], [8, 4, 1, "", "plot_gini_coefficient"], [8, 4, 1, "", "plot_graph"], [8, 4, 1, "", "plot_powerlaw_fit"], [8, 4, 1, "", "reset_style"], [8, 4, 1, "", "set_paper_style"]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:method", "3": "py:property", "4": "py:function"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "method", "Python method"], "3": ["py", "property", "Python property"], "4": ["py", "function", "Python function"]}, "titleterms": {"algorithm": 0, "content": [0, 4, 5], "sampl": 1, "paramet": [1, 2, 3, 6, 7, 8], "note": [1, 2, 3, 6, 7], "refer": [1, 2, 3, 7], "direct": 2, "graph": [2, 3, 4], "return": [2, 3, 6, 7], "undirect": 3, "see": 3, "also": 3, "network": 5, "inequ": 5, "indic": 5, "tabl": 5, "mechan": 6, "statist": 7, "visual": 8}, "envversion": {"sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx": 60}, "alltitles": {"Algorithms": [[0, "module-netin.sampling"]], "Contents:": [[0, null], [4, null], [5, null]], "Sampling": [[1, "sampling"]], "Parameters": [[1, "parameters"], [1, "id1"], [1, "id2"], [1, "id3"], [1, "id4"], [1, "id5"], [1, "id6"], [2, "parameters"], [2, "id8"], [2, "id11"], [2, "id16"], [2, "id19"], [2, "id22"], [2, "id26"], [2, "id28"], [2, "id30"], [2, "id34"], [3, "parameters"], [3, "id7"], [3, "id9"], [3, "id12"], [3, "id14"], [3, "id16"], [3, "id20"], [3, "id23"], [3, "id25"], [3, "id28"], [3, "id32"], [3, "id35"], [3, "id38"], [3, "id41"], [3, "id46"], [3, "id52"], [3, "id54"], [3, "id56"], [6, "parameters"], [6, "id1"], [6, "id3"], [6, "id5"], [6, "id8"], [6, "id9"], [6, "id11"], [6, "id13"], [6, "id18"], [6, "id20"], [6, "id23"], [6, "id24"], [7, "parameters"], [7, "id1"], [7, "id3"], [7, "id5"], [7, "id7"], [7, "id9"], [7, "id11"], [7, "id13"], [7, "id15"], [7, "id17"], [7, "id19"], [7, "id21"], [7, "id22"], [7, "id24"], [7, "id26"], [7, "id28"], [7, "id30"], [7, "id32"], [7, "id35"], [7, "id37"], [7, "id40"], [8, "parameters"], [8, "id1"], [8, "id2"], [8, "id3"], [8, "id4"], [8, "id5"], [8, "id6"]], "Notes": [[1, "notes"], [2, "notes"], [2, "id10"], [2, "id12"], [2, "id17"], [2, "id23"], [2, "id31"], [3, "notes"], [3, "id10"], [3, "id17"], [3, "id36"], [3, "id44"], [3, "id47"], [6, "notes"], [6, "id12"], [7, "notes"], [7, "id34"], [7, "id39"]], "References": [[1, "references"], [2, "references"], [2, "id15"], [3, "references"], [7, "references"]], "Directed Graphs": [[2, "directed-graphs"]], "Returns": [[2, "returns"], [2, "id1"], [2, "id2"], [2, "id3"], [2, "id4"], [2, "id5"], [2, "id6"], [2, "id7"], [2, "id9"], [2, "id14"], [2, "id20"], [2, "id21"], [2, "id27"], [2, "id29"], [2, "id35"], [2, "id36"], [3, "returns"], [3, "id4"], [3, "id5"], [3, "id6"], [3, "id8"], [3, "id13"], [3, "id15"], [3, "id21"], [3, "id22"], [3, "id24"], [3, "id26"], [3, "id29"], [3, "id31"], [3, "id33"], [3, "id39"], [3, "id40"], [3, "id42"], [3, "id43"], [3, "id51"], [3, "id53"], [3, "id55"], [3, "id57"], [3, "id58"], [3, "id59"], [6, "returns"], [6, "id2"], [6, "id4"], [6, "id6"], [6, "id7"], [6, "id10"], [6, "id14"], [6, "id15"], [6, "id16"], [6, "id17"], [6, "id19"], [6, "id21"], [6, "id22"], [7, "returns"], [7, "id2"], [7, "id4"], [7, "id6"], [7, "id8"], [7, "id10"], [7, "id12"], [7, "id14"], [7, "id16"], [7, "id18"], [7, "id20"], [7, "id23"], [7, "id25"], [7, "id27"], [7, "id29"], [7, "id31"], [7, "id33"], [7, "id36"], [7, "id38"], [7, "id41"]], "Undirected Graphs": [[3, "undirected-graphs"]], "See Also": [[3, "see-also"], [3, "id27"], [3, "id30"], [3, "id34"]], "Graphs": [[4, "graphs"]], "Network Inequality": [[5, "module-netin"]], "Indices and tables": [[5, "indices-and-tables"]], "Mechanisms": [[6, "mechanisms"]], "Statistics": [[7, "module-netin.stats.distributions"]], "Visualization": [[8, "module-netin.viz.handlers"]]}, "indexentries": {"module": [[0, "module-netin.sampling"], [5, "module-netin"], [7, "module-netin.stats.distributions"], [7, "module-netin.stats.networks"], [7, "module-netin.stats.ranking"], [8, "module-netin.viz.handlers"]], "netin.sampling": [[0, "module-netin.sampling"]], "degreegrouprank (class in netin.sampling)": [[1, "netin.sampling.DegreeGroupRank"]], "degreerank (class in netin.sampling)": [[1, "netin.sampling.DegreeRank"]], "partialcrawls (class in netin.sampling)": [[1, "netin.sampling.PartialCrawls"]], "randomedges (class in netin.sampling)": [[1, "netin.sampling.RandomEdges"]], "randomneighbor (class in netin.sampling)": [[1, "netin.sampling.RandomNeighbor"]], "randomnodes (class in netin.sampling)": [[1, "netin.sampling.RandomNodes"]], "sampling (class in netin.sampling)": [[1, "netin.sampling.Sampling"]], "info() (netin.sampling.sampling method)": [[1, "netin.sampling.Sampling.info"]], "method_name (netin.sampling.degreegrouprank property)": [[1, "netin.sampling.DegreeGroupRank.method_name"]], "method_name (netin.sampling.degreerank property)": [[1, "netin.sampling.DegreeRank.method_name"]], "method_name (netin.sampling.partialcrawls property)": [[1, "netin.sampling.PartialCrawls.method_name"]], "method_name (netin.sampling.randomedges property)": [[1, "netin.sampling.RandomEdges.method_name"]], "method_name (netin.sampling.randomneighbor property)": [[1, "netin.sampling.RandomNeighbor.method_name"]], "method_name (netin.sampling.randomnodes property)": [[1, "netin.sampling.RandomNodes.method_name"]], "method_name (netin.sampling.sampling property)": [[1, "netin.sampling.Sampling.method_name"]], "sampling() (netin.sampling.degreegrouprank method)": [[1, "netin.sampling.DegreeGroupRank.sampling"]], "sampling() (netin.sampling.degreerank method)": [[1, "netin.sampling.DegreeRank.sampling"]], "sampling() (netin.sampling.partialcrawls method)": [[1, "netin.sampling.PartialCrawls.sampling"]], "sampling() (netin.sampling.randomedges method)": [[1, "netin.sampling.RandomEdges.sampling"]], "sampling() (netin.sampling.randomneighbor method)": [[1, "netin.sampling.RandomNeighbor.sampling"]], "sampling() (netin.sampling.randomnodes method)": [[1, "netin.sampling.RandomNodes.sampling"]], "sampling() (netin.sampling.sampling method)": [[1, "netin.sampling.Sampling.sampling"]], "dh (class in netin)": [[2, "netin.DH"]], "dpa (class in netin)": [[2, "netin.DPA"]], "dpah (class in netin)": [[2, "netin.DPAH"]], "digraph (class in netin)": [[2, "netin.DiGraph"]], "calculate_in_degree_powerlaw_exponents() (netin.digraph method)": [[2, "netin.DiGraph.calculate_in_degree_powerlaw_exponents"]], "calculate_out_degree_powerlaw_exponents() (netin.digraph method)": [[2, "netin.DiGraph.calculate_out_degree_powerlaw_exponents"]], "generate() (netin.digraph method)": [[2, "netin.DiGraph.generate"]], "get_activity_distribution() (netin.digraph method)": [[2, "netin.DiGraph.get_activity_distribution"]], "get_expected_density() (netin.digraph method)": [[2, "netin.DiGraph.get_expected_density"]], "get_expected_number_of_edges() (netin.digraph method)": [[2, "netin.DiGraph.get_expected_number_of_edges"]], "get_expected_powerlaw_out_degree_majority() (netin.digraph method)": [[2, "netin.DiGraph.get_expected_powerlaw_out_degree_majority"]], "get_expected_powerlaw_out_degree_minority() (netin.digraph method)": [[2, "netin.DiGraph.get_expected_powerlaw_out_degree_minority"]], "get_in_degree() (netin.dpa method)": [[2, "netin.DPA.get_in_degree"]], "get_metadata_as_dict() (netin.digraph method)": [[2, "netin.DiGraph.get_metadata_as_dict"]], "get_sources() (netin.digraph method)": [[2, "netin.DiGraph.get_sources"]], "get_target() (netin.digraph method)": [[2, "netin.DiGraph.get_target"]], "get_target_probabilities() (netin.dh method)": [[2, "netin.DH.get_target_probabilities"]], "get_target_probabilities() (netin.dpa method)": [[2, "netin.DPA.get_target_probabilities"]], "get_target_probabilities() (netin.dpah method)": [[2, "netin.DPAH.get_target_probabilities"]], "get_target_probabilities() (netin.digraph method)": [[2, "netin.DiGraph.get_target_probabilities"]], "infer_homophily_values() (netin.dh method)": [[2, "netin.DH.infer_homophily_values"]], "infer_homophily_values() (netin.dpah method)": [[2, "netin.DPAH.infer_homophily_values"]], "info_computed() (netin.dh method)": [[2, "netin.DH.info_computed"]], "info_computed() (netin.dpah method)": [[2, "netin.DPAH.info_computed"]], "info_computed() (netin.digraph method)": [[2, "netin.DiGraph.info_computed"]], "info_params() (netin.dh method)": [[2, "netin.DH.info_params"]], "info_params() (netin.dpah method)": [[2, "netin.DPAH.info_params"]], "info_params() (netin.digraph method)": [[2, "netin.DiGraph.info_params"]], "pa (class in netin)": [[3, "netin.PA"]], "pah (class in netin)": [[3, "netin.PAH"]], "patc (class in netin)": [[3, "netin.PATC"]], "patch (class in netin)": [[3, "netin.PATCH"]], "undigraph (class in netin)": [[3, "netin.UnDiGraph"]], "calculate_degree_powerlaw_exponents() (netin.undigraph method)": [[3, "netin.UnDiGraph.calculate_degree_powerlaw_exponents"]], "fit() (netin.pa static method)": [[3, "netin.PA.fit"]], "fit() (netin.pah static method)": [[3, "netin.PAH.fit"]], "fit() (netin.patc static method)": [[3, "netin.PATC.fit"]], "fit_degree_powerlaw() (netin.undigraph method)": [[3, "netin.UnDiGraph.fit_degree_powerlaw"]], "generate() (netin.undigraph method)": [[3, "netin.UnDiGraph.generate"]], "get_expected_minimum_degree() (netin.undigraph method)": [[3, "netin.UnDiGraph.get_expected_minimum_degree"]], "get_expected_number_of_edges() (netin.undigraph method)": [[3, "netin.UnDiGraph.get_expected_number_of_edges"]], "get_metadata_as_dict() (netin.pah method)": [[3, "netin.PAH.get_metadata_as_dict"]], "get_metadata_as_dict() (netin.patc method)": [[3, "netin.PATC.get_metadata_as_dict"]], "get_metadata_as_dict() (netin.patch method)": [[3, "netin.PATCH.get_metadata_as_dict"]], "get_metadata_as_dict() (netin.undigraph method)": [[3, "netin.UnDiGraph.get_metadata_as_dict"]], "get_special_targets() (netin.patc method)": [[3, "netin.PATC.get_special_targets"]], "get_special_targets() (netin.patch method)": [[3, "netin.PATCH.get_special_targets"]], "get_target() (netin.undigraph method)": [[3, "netin.UnDiGraph.get_target"]], "get_target_probabilities() (netin.pa method)": [[3, "netin.PA.get_target_probabilities"]], "get_target_probabilities() (netin.pah method)": [[3, "netin.PAH.get_target_probabilities"]], "get_target_probabilities() (netin.patc method)": [[3, "netin.PATC.get_target_probabilities"]], "get_target_probabilities() (netin.patch method)": [[3, "netin.PATCH.get_target_probabilities"]], "get_target_probabilities_regular() (netin.patc method)": [[3, "netin.PATC.get_target_probabilities_regular"]], "get_target_probabilities_regular() (netin.patch method)": [[3, "netin.PATCH.get_target_probabilities_regular"]], "infer_homophily_values() (netin.pah method)": [[3, "netin.PAH.infer_homophily_values"]], "infer_homophily_values() (netin.patch method)": [[3, "netin.PATCH.infer_homophily_values"]], "infer_triadic_closure() (netin.patc method)": [[3, "netin.PATC.infer_triadic_closure"]], "infer_triadic_closure() (netin.patch method)": [[3, "netin.PATCH.infer_triadic_closure"]], "info_computed() (netin.pah method)": [[3, "netin.PAH.info_computed"]], "info_computed() (netin.patch method)": [[3, "netin.PATCH.info_computed"]], "info_computed() (netin.undigraph method)": [[3, "netin.UnDiGraph.info_computed"]], "info_params() (netin.pah method)": [[3, "netin.PAH.info_params"]], "info_params() (netin.patc method)": [[3, "netin.PATC.info_params"]], "info_params() (netin.patch method)": [[3, "netin.PATCH.info_params"]], "info_params() (netin.undigraph method)": [[3, "netin.UnDiGraph.info_params"]], "update_special_targets() (netin.patc method)": [[3, "netin.PATC.update_special_targets"]], "netin": [[5, "module-netin"]], "homophily (class in netin)": [[6, "netin.Homophily"]], "triadicclosure (class in netin)": [[6, "netin.TriadicClosure"]], "get_homophily_between_source_and_target() (netin.homophily method)": [[6, "netin.Homophily.get_homophily_between_source_and_target"]], "get_homophily_majority() (netin.homophily method)": [[6, "netin.Homophily.get_homophily_majority"]], "get_homophily_minority() (netin.homophily method)": [[6, "netin.Homophily.get_homophily_minority"]], "get_metadata_as_dict() (netin.homophily method)": [[6, "netin.Homophily.get_metadata_as_dict"]], "get_metadata_as_dict() (netin.triadicclosure method)": [[6, "netin.TriadicClosure.get_metadata_as_dict"]], "get_special_targets() (netin.triadicclosure method)": [[6, "netin.TriadicClosure.get_special_targets"]], "get_target() (netin.homophily method)": [[6, "netin.Homophily.get_target"]], "get_target() (netin.triadicclosure method)": [[6, "netin.TriadicClosure.get_target"]], "get_target_probabilities() (netin.homophily method)": [[6, "netin.Homophily.get_target_probabilities"]], "get_target_probabilities() (netin.triadicclosure method)": [[6, "netin.TriadicClosure.get_target_probabilities"]], "get_triadic_closure() (netin.triadicclosure method)": [[6, "netin.TriadicClosure.get_triadic_closure"]], "infer_homophily_values() (netin.homophily method)": [[6, "netin.Homophily.infer_homophily_values"]], "info_computed() (netin.homophily method)": [[6, "netin.Homophily.info_computed"]], "info_computed() (netin.triadicclosure method)": [[6, "netin.TriadicClosure.info_computed"]], "info_params() (netin.homophily method)": [[6, "netin.Homophily.info_params"]], "info_params() (netin.triadicclosure method)": [[6, "netin.TriadicClosure.info_params"]], "set_homophily_majority() (netin.homophily method)": [[6, "netin.Homophily.set_homophily_majority"]], "set_homophily_minority() (netin.homophily method)": [[6, "netin.Homophily.set_homophily_minority"]], "set_triadic_closure() (netin.triadicclosure method)": [[6, "netin.TriadicClosure.set_triadic_closure"]], "update_special_targets() (netin.triadicclosure method)": [[6, "netin.TriadicClosure.update_special_targets"]], "fit_power_law() (in module netin.stats.distributions)": [[7, "netin.stats.distributions.fit_power_law"]], "get_average_degree() (in module netin.stats.networks)": [[7, "netin.stats.networks.get_average_degree"]], "get_average_degrees() (in module netin.stats.networks)": [[7, "netin.stats.networks.get_average_degrees"]], "get_ccdf() (in module netin.stats.distributions)": [[7, "netin.stats.distributions.get_ccdf"]], "get_cdf() (in module netin.stats.distributions)": [[7, "netin.stats.distributions.get_cdf"]], "get_disparity() (in module netin.stats.distributions)": [[7, "netin.stats.distributions.get_disparity"]], "get_edge_type_counts() (in module netin.stats.networks)": [[7, "netin.stats.networks.get_edge_type_counts"]], "get_fraction_of_minority() (in module netin.stats.distributions)": [[7, "netin.stats.distributions.get_fraction_of_minority"]], "get_fraction_of_minority_in_ranking() (in module netin.stats.ranking)": [[7, "netin.stats.ranking.get_fraction_of_minority_in_ranking"]], "get_gini_coefficient() (in module netin.stats.distributions)": [[7, "netin.stats.distributions.get_gini_coefficient"]], "get_gini_in_ranking() (in module netin.stats.ranking)": [[7, "netin.stats.ranking.get_gini_in_ranking"]], "get_min_degree() (in module netin.stats.networks)": [[7, "netin.stats.networks.get_min_degree"]], "get_minority_fraction() (in module netin.stats.networks)": [[7, "netin.stats.networks.get_minority_fraction"]], "get_node_attributes() (in module netin.stats.networks)": [[7, "netin.stats.networks.get_node_attributes"]], "get_pdf() (in module netin.stats.distributions)": [[7, "netin.stats.distributions.get_pdf"]], "get_ranking_inequality() (in module netin.stats.ranking)": [[7, "netin.stats.ranking.get_ranking_inequality"]], "get_ranking_inequality_class() (in module netin.stats.ranking)": [[7, "netin.stats.ranking.get_ranking_inequality_class"]], "get_ranking_inequity() (in module netin.stats.ranking)": [[7, "netin.stats.ranking.get_ranking_inequity"]], "get_ranking_inequity_class() (in module netin.stats.ranking)": [[7, "netin.stats.ranking.get_ranking_inequity_class"]], "get_similitude() (in module netin.stats.networks)": [[7, "netin.stats.networks.get_similitude"]], "gini() (in module netin.stats.ranking)": [[7, "netin.stats.ranking.gini"]], "netin.stats.distributions": [[7, "module-netin.stats.distributions"]], "netin.stats.networks": [[7, "module-netin.stats.networks"]], "netin.stats.ranking": [[7, "module-netin.stats.ranking"]], "netin.viz.handlers": [[8, "module-netin.viz.handlers"]], "plot_disparity() (in module netin.viz.handlers)": [[8, "netin.viz.handlers.plot_disparity"]], "plot_distribution() (in module netin.viz.handlers)": [[8, "netin.viz.handlers.plot_distribution"]], "plot_fraction_of_minority() (in module netin.viz.handlers)": [[8, "netin.viz.handlers.plot_fraction_of_minority"]], "plot_gini_coefficient() (in module netin.viz.handlers)": [[8, "netin.viz.handlers.plot_gini_coefficient"]], "plot_graph() (in module netin.viz.handlers)": [[8, "netin.viz.handlers.plot_graph"]], "plot_powerlaw_fit() (in module netin.viz.handlers)": [[8, "netin.viz.handlers.plot_powerlaw_fit"]], "reset_style() (in module netin.viz.handlers)": [[8, "netin.viz.handlers.reset_style"]], "set_paper_style() (in module netin.viz.handlers)": [[8, "netin.viz.handlers.set_paper_style"]]}})