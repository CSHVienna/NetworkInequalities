Search.setIndex({"docnames": ["generators/directed", "generators/undirected", "index", "mechanisms", "statistics", "visualizations"], "filenames": ["generators/directed.rst", "generators/undirected.rst", "index.rst", "mechanisms.rst", "statistics.rst", "visualizations.rst"], "titles": ["Directed Graphs", "Undirected Graphs", "Network Inequality", "Mechanisms", "Statistics", "Visualization"], "terms": {"class": [0, 1, 3, 4, 5], "netin": [0, 1, 2, 3, 4, 5], "digraph": [0, 2], "n": [0, 1, 3], "int": [0, 1, 3, 4, 5], "f_m": [0, 1, 3, 4], "float": [0, 1, 3, 4, 5], "d": 0, "plo_m": 0, "seed": [0, 1, 3], "object": [0, 1, 3], "none": [0, 1, 3, 4, 5], "base": [0, 1, 2, 3], "model": [0, 1, 3], "number": [0, 1, 3, 5], "node": [0, 1, 3, 5], "minimum": [0, 1, 3, 4], "2": [0, 1, 3], "edg": [0, 1, 3, 5], "densiti": [0, 4], "0": [0, 1, 3, 4, 5], "maximum": [0, 1, 3, 4], "1": [0, 1, 3, 5], "fraction": [0, 1, 3, 4, 5], "minor": [0, 1, 3, 4, 5], "activ": 0, "out": 0, "degre": [0, 1, 5], "power": [0, 4], "law": [0, 4], "expon": [0, 1], "major": [0, 1, 3], "group": [0, 3, 5], "random": [0, 1, 3], "gener": [0, 1, 3], "The": [0, 1, 4, 5], "initi": [0, 1], "i": [0, 1, 2, 3, 4, 5], "sourc": [0, 1, 3], "ar": [0, 1, 3, 5], "select": [0, 1, 3], "given": [0, 1, 3, 4, 5], "target": [0, 1, 3], "depend": [0, 1], "chosen": [0, 1], "mechan": [0, 1, 2], "format": [0, 1, 3], "dpah": [0, 2], "preferenti": [0, 1, 3], "attach": [0, 1, 3], "homophili": [0, 1, 2, 3], "h": [0, 3], "see": [0, 4], "dpa": [0, 2], "dh": [0, 2], "espin": [0, 4], "noboa2022": [0, 4], "esp\u00edn": 0, "noboa": 0, "c": [0, 1], "wagner": [0, 1], "m": [0, 1], "strohmaier": [0, 1], "f": 0, "karimi": [0, 1], "inequ": [0, 4, 5], "network": [0, 1], "rank": [0, 1, 2, 4, 5], "recommend": 0, "algorithm": 0, "scientif": [0, 1], "report": [0, 1], "12": 0, "14": 0, "2022": 0, "karimi2018": [0, 1], "g\u00e9noi": [0, 1], "p": [0, 1], "singer": [0, 1], "influenc": [0, 1], "social": [0, 1, 2], "8": [0, 1], "11077": [0, 1], "2018": [0, 1], "barabasialbert1999": [0, 1], "barabasi": [0, 1], "r": [0, 1], "albert": [0, 1], "emerg": [0, 1, 3], "scale": [0, 1, 5], "scienc": [0, 1], "286": [0, 1], "pp": [0, 1], "509": [0, 1], "512": [0, 1], "1999": [0, 1], "calculate_in_degree_powerlaw_expon": 0, "tupl": [0, 1, 3, 4, 5], "distribut": [0, 1, 4, 5], "calculate_out_degree_powerlaw_expon": 0, "fit_powerlaw": 0, "metric": 0, "str": [0, 4, 5], "fit": [0, 1, 4, 5], "powerlaw": [0, 1, 4, 5], "A": [0, 5], "grown": [0, 1], "new": [0, 1], "randomli": 0, "replac": 0, "each": [0, 1, 4, 5], "drawn": [0, 1], "h_mm": [0, 1, 3], "5": [0, 1], "ba": [0, 1], "erdo": 0, "renyi": 0, "dph": 0, "get_activity_distribut": 0, "arrai": [0, 1, 3, 4], "all": [0, 1, 5], "np": [0, 1, 3, 4], "get_expected_dens": 0, "expect": [0, 1], "input": [0, 1, 3, 4], "get_expected_number_of_edg": [0, 1], "get_expected_powerlaw_out_degree_major": 0, "get_expected_powerlaw_out_degree_minor": 0, "get_metadata_as_dict": [0, 1, 3], "dict": [0, 1, 3, 4, 5], "metadata": [0, 1, 3, 5], "get_sourc": 0, "sampl": 0, "us": [0, 1, 4, 5], "ha": 0, "length": 0, "probabl": [0, 1, 3, 4], "its": 0, "get_target": [0, 1, 3], "edge_list": 0, "kwarg": [0, 4, 5], "dictionari": [0, 1, 3], "addit": [0, 4, 5], "union": [0, 4, 5], "get_target_prob": [0, 1, 3], "target_set": [0, 1, 3], "set": [0, 1, 2, 3, 4, 5], "special_target": [0, 1, 3], "iter": [0, 1, 3], "connect": [0, 1, 3], "id": [0, 1, 3], "here": [0, 4], "special": [0, 1, 3], "consid": [0, 1], "It": [0, 2, 5], "follow": 0, "an": [0, 1, 3], "erdosrenyi1959": 0, "erd\u0151": 0, "r\u00e9nyi": 0, "On": 0, "publ": 0, "math": 0, "6": [0, 4], "290": 0, "1959": 0, "info_comput": [0, 1, 3], "show": [0, 1, 3, 5], "comput": [0, 1, 3, 4], "properti": [0, 1, 3, 5], "info_param": [0, 1, 3], "creat": [0, 1, 3], "instanc": [0, 1], "within": [0, 3], "via": [0, 1], "prob": [0, 1], "infer_homophily_valu": [0, 1, 3], "infer": [0, 1, 2, 3, 4], "analyt": [0, 1, 3], "valu": [0, 1, 3, 4, 5], "get_in_degre": 0, "thi": [0, 1, 3, 5], "calcul": [0, 4], "taken": 0, "from": [0, 1, 3, 5], "in_degre": 0, "popul": 0, "while": 0, "where": [0, 1], "which": [0, 4], "version": 0, "e": [0, 1, 2, 3, 4, 5], "between": [0, 1, 3, 4, 5], "level": [0, 1], "undigraph": [1, 2], "k": [1, 4, 5], "Then": 1, "everytim": 1, "get": [1, 5], "pa": [1, 2], "pah": [1, 2], "patc": [1, 2], "triadic": [1, 3], "closur": [1, 3], "holmekim2002": 1, "patch": [1, 2], "holm": 1, "b": 1, "j": 1, "kim": 1, "grow": 1, "free": 1, "tunabl": 1, "cluster": 1, "phy": 1, "rev": 1, "2002": 1, "calculate_degree_powerlaw_expon": 1, "pl_m": 1, "fit_degree_powerlaw": 1, "fit_m": 1, "either": 1, "For": 1, "candid": 1, "uniformli": 1, "triad": 1, "close": 1, "otherwis": [1, 5], "vari": 1, "rang": 1, "heterophil": 1, "homophil": 1, "neutral": 1, "similarli": 1, "full": 1, "tc": [1, 3], "get_expected_minimum_degre": 1, "pick": [1, 3], "newli": [1, 3], "ad": [1, 3], "potenti": [1, 3], "should": [1, 3], "numpi": [1, 3, 4], "proport": 1, "inform": 1, "": [1, 5], "get_special_target": [1, 3], "empti": [1, 3], "get_target_probabilities_regular": 1, "infer_triadic_closur": 1, "approxim": 1, "update_special_target": [1, 3], "idx_target": [1, 3], "updat": [1, 3], "index": [1, 2, 3], "similar": [1, 3], "h_": 1, "known": 1, "solut": 1, "deriv": 1, "triadicclosur": [1, 2, 3], "ndarrai": [1, 4], "python": 2, "packag": 2, "analysi": 2, "networkx": 2, "provid": 2, "function": [2, 5], "studi": 2, "g": [2, 5], "direct": 2, "graph": [2, 3, 4, 5], "undirect": 2, "statist": 2, "fit_power_law": [2, 4], "get_ccdf": [2, 4], "get_cdf": [2, 4], "get_dispar": [2, 4], "get_fraction_of_minor": [2, 4], "get_gini_coeffici": [2, 4], "get_pdf": [2, 4], "get_fraction_of_minority_in_rank": [2, 4], "get_gini_in_rank": [2, 4], "get_ranking_inequ": [2, 4], "get_ranking_inequality_class": [2, 4], "get_ranking_inequity_class": [2, 4], "gini": [2, 4, 5], "visual": 2, "plot_dispar": [2, 5], "plot_distribut": [2, 5], "plot_fraction_of_minor": [2, 5], "plot_gini_coeffici": [2, 5], "plot_graph": [2, 5], "plot_powerlaw_fit": [2, 5], "reset_styl": [2, 5], "set_paper_styl": [2, 5], "modul": 2, "search": 2, "page": 2, "doe": 3, "dynam": 3, "regular": 3, "get_triadic_closur": 3, "set_triadic_closur": 3, "when": 3, "multipl": [3, 5], "two": [3, 4], "hop": 3, "neighbor": 3, "yet": 3, "directli": 3, "These": 3, "get_homophily_between_source_and_target": 3, "mix": 3, "matrix": 3, "get_homophily_major": 3, "get_homophily_minor": 3, "info": 3, "obj": 3, "set_homophily_major": 3, "set_homophily_minor": 3, "stat": 4, "data": [4, 5], "list": [4, 5], "discret": 4, "bool": [4, 5], "true": [4, 5], "xmin": 4, "xmax": 4, "whether": 4, "argument": [4, 5], "pass": [4, 5], "constructor": 4, "df": 4, "panda": [4, 5], "core": 4, "frame": 4, "datafram": [4, 5], "x": [4, 5], "total": 4, "complementari": 4, "cumul": 4, "ccdf": [4, 5], "pd": [4, 5], "contain": 4, "column": [4, 5], "name": [4, 5], "amount": [4, 5], "normal": [4, 5], "hold": 4, "y": [4, 5], "cdf": [4, 5], "dispar": [4, 5], "top": [4, 5], "coeffici": [4, 5], "entir": 4, "op": 4, "100": 4, "gini_glob": 4, "cut": [4, 5], "3": 4, "label": [4, 5], "determin": 4, "equal": 4, "moder": 4, "skew": 4, "By": 4, "default": [4, 5], "me": 4, "mean": [4, 5], "error": [4, 5], "distanc": 4, "beta": [4, 5], "measur": 4, "threshold": 4, "fair": [4, 5], "over": [4, 5], "repres": [4, 5], "under": [4, 5], "more": 4, "detail": 4, "05": 4, "implement": 4, "viz": 5, "handler": 5, "col_nam": 5, "fn": 5, "plot": 5, "file": 5, "save": 5, "get_x_y_from_df_fnc": 5, "callabl": 5, "includ": 5, "filenam": 5, "figur": 5, "nc": 5, "grid": 5, "cell_siz": 5, "size": 5, "cell": 5, "inch": 5, "If": 5, "first": 5, "width": 5, "second": 5, "height": 5, "scatter": 5, "sharex": 5, "axi": 5, "share": 5, "subplot": 5, "sharei": 5, "ylabel": 5, "xlabel": 5, "xlim": 5, "ylim": 5, "limit": 5, "hue": 5, "common_norm": 5, "same": 5, "sum": 5, "per": 5, "log_scal": 5, "log": 5, "hline_fnc": 5, "horizont": 5, "line": 5, "vline_fnc": 5, "vertic": 5, "suptitl": 5, "titl": 5, "whole": 5, "gini_fnc": 5, "me_fnc": 5, "smooth": 5, "area": 5, "represent": 5, "class_label_legend": 5, "legend": 5, "And": 5, "sent": 5, "ax": 5, "matplotlib": 5, "share_po": 5, "fals": 5, "one": 5, "posit": 5, "node_s": 5, "node_shap": 5, "shape": 5, "o": 5, "circl": 5, "squar": 5, "edge_width": 5, "edge_styl": 5, "style": 5, "solid": 5, "dash": 5, "edge_arrow": 5, "arrow": 5, "arrow_styl": 5, "fill": 5, "arrow_s": 5, "subplots_adjust": 5, "savefig": 5, "kind": 5, "empir": 5, "type": 5, "One": 5, "pdf": 5, "among": 5, "verbos": 5, "print": 5, "wspace": 5, "reserv": 5, "blank": 5, "space": 5, "express": 5, "averag": 5, "hspace": 5, "white": 5, "suptil": 5, "color": 5, "bbox": 5, "bound": 5, "box": 5, "four": 5, "left": 5, "bottom": 5, "right": 5, "coordin": 5, "loc": 5, "locat": 5, "best": 5, "upper": 5, "lower": 5, "center": 5, "reset": 5, "font_scal": 5, "paper": 5, "font": 5, "famili": 5, "serif": 5, "allow": 5, "adjust": 5, "factor": 5}, "objects": {"": [[2, 0, 0, "-", "netin"]], "netin": [[0, 1, 1, "", "DH"], [0, 1, 1, "", "DPA"], [0, 1, 1, "", "DPAH"], [0, 1, 1, "", "DiGraph"], [3, 1, 1, "", "Homophily"], [1, 1, 1, "", "PA"], [1, 1, 1, "", "PAH"], [1, 1, 1, "", "PATC"], [1, 1, 1, "", "PATCH"], [3, 1, 1, "", "TriadicClosure"], [1, 1, 1, "", "UnDiGraph"]], "netin.DH": [[0, 2, 1, "", "get_target_probabilities"], [0, 2, 1, "", "infer_homophily_values"], [0, 2, 1, "", "info_computed"], [0, 2, 1, "", "info_params"]], "netin.DPA": [[0, 2, 1, "", "get_in_degree"], [0, 2, 1, "", "get_target_probabilities"]], "netin.DPAH": [[0, 2, 1, "", "get_target_probabilities"], [0, 2, 1, "", "infer_homophily_values"], [0, 2, 1, "", "info_computed"], [0, 2, 1, "", "info_params"]], "netin.DiGraph": [[0, 2, 1, "", "calculate_in_degree_powerlaw_exponents"], [0, 2, 1, "", "calculate_out_degree_powerlaw_exponents"], [0, 2, 1, "", "fit_powerlaw"], [0, 2, 1, "", "generate"], [0, 2, 1, "", "get_activity_distribution"], [0, 2, 1, "", "get_expected_density"], [0, 2, 1, "", "get_expected_number_of_edges"], [0, 2, 1, "", "get_expected_powerlaw_out_degree_majority"], [0, 2, 1, "", "get_expected_powerlaw_out_degree_minority"], [0, 2, 1, "", "get_metadata_as_dict"], [0, 2, 1, "", "get_sources"], [0, 2, 1, "", "get_target"], [0, 2, 1, "", "get_target_probabilities"], [0, 2, 1, "", "info_computed"], [0, 2, 1, "", "info_params"]], "netin.Homophily": [[3, 2, 1, "", "get_homophily_between_source_and_target"], [3, 2, 1, "", "get_homophily_majority"], [3, 2, 1, "", "get_homophily_minority"], [3, 2, 1, "", "get_metadata_as_dict"], [3, 2, 1, "", "get_target"], [3, 2, 1, "", "get_target_probabilities"], [3, 2, 1, "", "infer_homophily_values"], [3, 2, 1, "", "info_computed"], [3, 2, 1, "", "info_params"], [3, 2, 1, "", "set_homophily_majority"], [3, 2, 1, "", "set_homophily_minority"]], "netin.PA": [[1, 2, 1, "", "get_target_probabilities"]], "netin.PAH": [[1, 2, 1, "", "get_metadata_as_dict"], [1, 2, 1, "", "get_target_probabilities"], [1, 2, 1, "", "infer_homophily_values"], [1, 2, 1, "", "info_computed"], [1, 2, 1, "", "info_params"]], "netin.PATC": [[1, 2, 1, "", "get_metadata_as_dict"], [1, 2, 1, "", "get_special_targets"], [1, 2, 1, "", "get_target_probabilities"], [1, 2, 1, "", "get_target_probabilities_regular"], [1, 2, 1, "", "infer_triadic_closure"], [1, 2, 1, "", "info_params"], [1, 2, 1, "", "update_special_targets"]], "netin.PATCH": [[1, 2, 1, "", "get_metadata_as_dict"], [1, 2, 1, "", "get_special_targets"], [1, 2, 1, "", "get_target_probabilities"], [1, 2, 1, "", "get_target_probabilities_regular"], [1, 2, 1, "", "infer_homophily_values"], [1, 2, 1, "", "infer_triadic_closure"], [1, 2, 1, "", "info_computed"], [1, 2, 1, "", "info_params"]], "netin.TriadicClosure": [[3, 2, 1, "", "get_metadata_as_dict"], [3, 2, 1, "", "get_special_targets"], [3, 2, 1, "", "get_target"], [3, 2, 1, "", "get_target_probabilities"], [3, 2, 1, "", "get_triadic_closure"], [3, 2, 1, "", "info_computed"], [3, 2, 1, "", "info_params"], [3, 2, 1, "", "set_triadic_closure"], [3, 2, 1, "", "update_special_targets"]], "netin.UnDiGraph": [[1, 2, 1, "", "calculate_degree_powerlaw_exponents"], [1, 2, 1, "", "fit_degree_powerlaw"], [1, 2, 1, "", "generate"], [1, 2, 1, "", "get_expected_minimum_degree"], [1, 2, 1, "", "get_expected_number_of_edges"], [1, 2, 1, "", "get_metadata_as_dict"], [1, 2, 1, "", "get_target"], [1, 2, 1, "", "info_computed"], [1, 2, 1, "", "info_params"]], "netin.stats": [[4, 0, 0, "-", "distributions"], [4, 0, 0, "-", "ranking"]], "netin.stats.distributions": [[4, 3, 1, "", "fit_power_law"], [4, 3, 1, "", "get_ccdf"], [4, 3, 1, "", "get_cdf"], [4, 3, 1, "", "get_disparity"], [4, 3, 1, "", "get_fraction_of_minority"], [4, 3, 1, "", "get_gini_coefficient"], [4, 3, 1, "", "get_pdf"]], "netin.stats.ranking": [[4, 3, 1, "", "get_fraction_of_minority_in_ranking"], [4, 3, 1, "", "get_gini_in_ranking"], [4, 3, 1, "", "get_ranking_inequality"], [4, 3, 1, "", "get_ranking_inequality_class"], [4, 3, 1, "", "get_ranking_inequity"], [4, 3, 1, "", "get_ranking_inequity_class"], [4, 3, 1, "", "gini"]], "netin.viz": [[5, 0, 0, "-", "handlers"]], "netin.viz.handlers": [[5, 3, 1, "", "plot_disparity"], [5, 3, 1, "", "plot_distribution"], [5, 3, 1, "", "plot_fraction_of_minority"], [5, 3, 1, "", "plot_gini_coefficient"], [5, 3, 1, "", "plot_graph"], [5, 3, 1, "", "plot_powerlaw_fit"], [5, 3, 1, "", "reset_style"], [5, 3, 1, "", "set_paper_style"]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:method", "3": "py:function"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "method", "Python method"], "3": ["py", "function", "Python function"]}, "titleterms": {"direct": 0, "graph": [0, 1], "paramet": [0, 1, 3, 4, 5], "note": [0, 1, 3, 4], "refer": [0, 1, 4], "return": [0, 1, 3, 4], "undirect": 1, "see": 1, "also": 1, "network": 2, "inequ": 2, "content": 2, "indic": 2, "tabl": 2, "mechan": 3, "statist": 4, "visual": 5}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx": 57}, "alltitles": {"Directed Graphs": [[0, "directed-graphs"]], "Parameters": [[0, "parameters"], [0, "id2"], [0, "id10"], [0, "id12"], [0, "id17"], [0, "id20"], [0, "id23"], [0, "id28"], [0, "id30"], [0, "id32"], [0, "id36"], [1, "parameters"], [1, "id7"], [1, "id9"], [1, "id12"], [1, "id15"], [1, "id17"], [1, "id20"], [1, "id24"], [1, "id27"], [1, "id31"], [1, "id36"], [1, "id42"], [1, "id44"], [1, "id46"], [3, "parameters"], [3, "id1"], [3, "id3"], [3, "id5"], [3, "id8"], [3, "id9"], [3, "id11"], [3, "id13"], [3, "id18"], [3, "id20"], [3, "id23"], [3, "id24"], [4, "parameters"], [4, "id1"], [4, "id3"], [4, "id5"], [4, "id7"], [4, "id9"], [4, "id11"], [4, "id13"], [4, "id15"], [4, "id17"], [4, "id19"], [4, "id21"], [4, "id23"], [4, "id26"], [5, "parameters"], [5, "id1"], [5, "id2"], [5, "id3"], [5, "id4"], [5, "id7"], [5, "id8"]], "Notes": [[0, "notes"], [0, "id13"], [0, "id18"], [0, "id24"], [0, "id33"], [1, "notes"], [1, "id10"], [1, "id28"], [1, "id34"], [1, "id37"], [3, "notes"], [3, "id12"], [4, "notes"], [4, "id25"]], "References": [[0, "references"], [0, "id16"], [0, "id27"], [1, "references"], [4, "references"]], "Returns": [[0, "returns"], [0, "id1"], [0, "id3"], [0, "id4"], [0, "id5"], [0, "id6"], [0, "id7"], [0, "id8"], [0, "id9"], [0, "id11"], [0, "id15"], [0, "id21"], [0, "id22"], [0, "id29"], [0, "id31"], [0, "id37"], [0, "id38"], [1, "returns"], [1, "id4"], [1, "id5"], [1, "id6"], [1, "id8"], [1, "id13"], [1, "id14"], [1, "id16"], [1, "id18"], [1, "id21"], [1, "id23"], [1, "id25"], [1, "id30"], [1, "id32"], [1, "id33"], [1, "id41"], [1, "id43"], [1, "id45"], [1, "id47"], [1, "id48"], [1, "id49"], [3, "returns"], [3, "id2"], [3, "id4"], [3, "id6"], [3, "id7"], [3, "id10"], [3, "id14"], [3, "id15"], [3, "id16"], [3, "id17"], [3, "id19"], [3, "id21"], [3, "id22"], [4, "returns"], [4, "id2"], [4, "id4"], [4, "id6"], [4, "id8"], [4, "id10"], [4, "id12"], [4, "id14"], [4, "id16"], [4, "id18"], [4, "id20"], [4, "id22"], [4, "id24"], [4, "id27"]], "Undirected Graphs": [[1, "undirected-graphs"]], "See Also": [[1, "see-also"], [1, "id19"], [1, "id22"], [1, "id26"]], "Network Inequality": [[2, "module-netin"]], "Contents:": [[2, null]], "Indices and tables": [[2, "indices-and-tables"]], "Mechanisms": [[3, "mechanisms"]], "Statistics": [[4, "module-netin.stats.distributions"]], "Visualization": [[5, "module-netin.viz.handlers"]]}, "indexentries": {"dh (class in netin)": [[0, "netin.DH"]], "dpa (class in netin)": [[0, "netin.DPA"]], "dpah (class in netin)": [[0, "netin.DPAH"]], "digraph (class in netin)": [[0, "netin.DiGraph"]], "calculate_in_degree_powerlaw_exponents() (netin.digraph method)": [[0, "netin.DiGraph.calculate_in_degree_powerlaw_exponents"]], "calculate_out_degree_powerlaw_exponents() (netin.digraph method)": [[0, "netin.DiGraph.calculate_out_degree_powerlaw_exponents"]], "fit_powerlaw() (netin.digraph method)": [[0, "netin.DiGraph.fit_powerlaw"]], "generate() (netin.digraph method)": [[0, "netin.DiGraph.generate"]], "get_activity_distribution() (netin.digraph method)": [[0, "netin.DiGraph.get_activity_distribution"]], "get_expected_density() (netin.digraph method)": [[0, "netin.DiGraph.get_expected_density"]], "get_expected_number_of_edges() (netin.digraph method)": [[0, "netin.DiGraph.get_expected_number_of_edges"]], "get_expected_powerlaw_out_degree_majority() (netin.digraph method)": [[0, "netin.DiGraph.get_expected_powerlaw_out_degree_majority"]], "get_expected_powerlaw_out_degree_minority() (netin.digraph method)": [[0, "netin.DiGraph.get_expected_powerlaw_out_degree_minority"]], "get_in_degree() (netin.dpa method)": [[0, "netin.DPA.get_in_degree"]], "get_metadata_as_dict() (netin.digraph method)": [[0, "netin.DiGraph.get_metadata_as_dict"]], "get_sources() (netin.digraph method)": [[0, "netin.DiGraph.get_sources"]], "get_target() (netin.digraph method)": [[0, "netin.DiGraph.get_target"]], "get_target_probabilities() (netin.dh method)": [[0, "netin.DH.get_target_probabilities"]], "get_target_probabilities() (netin.dpa method)": [[0, "netin.DPA.get_target_probabilities"]], "get_target_probabilities() (netin.dpah method)": [[0, "netin.DPAH.get_target_probabilities"]], "get_target_probabilities() (netin.digraph method)": [[0, "netin.DiGraph.get_target_probabilities"]], "infer_homophily_values() (netin.dh method)": [[0, "netin.DH.infer_homophily_values"]], "infer_homophily_values() (netin.dpah method)": [[0, "netin.DPAH.infer_homophily_values"]], "info_computed() (netin.dh method)": [[0, "netin.DH.info_computed"]], "info_computed() (netin.dpah method)": [[0, "netin.DPAH.info_computed"]], "info_computed() (netin.digraph method)": [[0, "netin.DiGraph.info_computed"]], "info_params() (netin.dh method)": [[0, "netin.DH.info_params"]], "info_params() (netin.dpah method)": [[0, "netin.DPAH.info_params"]], "info_params() (netin.digraph method)": [[0, "netin.DiGraph.info_params"]], "pa (class in netin)": [[1, "netin.PA"]], "pah (class in netin)": [[1, "netin.PAH"]], "patc (class in netin)": [[1, "netin.PATC"]], "patch (class in netin)": [[1, "netin.PATCH"]], "undigraph (class in netin)": [[1, "netin.UnDiGraph"]], "calculate_degree_powerlaw_exponents() (netin.undigraph method)": [[1, "netin.UnDiGraph.calculate_degree_powerlaw_exponents"]], "fit_degree_powerlaw() (netin.undigraph method)": [[1, "netin.UnDiGraph.fit_degree_powerlaw"]], "generate() (netin.undigraph method)": [[1, "netin.UnDiGraph.generate"]], "get_expected_minimum_degree() (netin.undigraph method)": [[1, "netin.UnDiGraph.get_expected_minimum_degree"]], "get_expected_number_of_edges() (netin.undigraph method)": [[1, "netin.UnDiGraph.get_expected_number_of_edges"]], "get_metadata_as_dict() (netin.pah method)": [[1, "netin.PAH.get_metadata_as_dict"]], "get_metadata_as_dict() (netin.patc method)": [[1, "netin.PATC.get_metadata_as_dict"]], "get_metadata_as_dict() (netin.patch method)": [[1, "netin.PATCH.get_metadata_as_dict"]], "get_metadata_as_dict() (netin.undigraph method)": [[1, "netin.UnDiGraph.get_metadata_as_dict"]], "get_special_targets() (netin.patc method)": [[1, "netin.PATC.get_special_targets"]], "get_special_targets() (netin.patch method)": [[1, "netin.PATCH.get_special_targets"]], "get_target() (netin.undigraph method)": [[1, "netin.UnDiGraph.get_target"]], "get_target_probabilities() (netin.pa method)": [[1, "netin.PA.get_target_probabilities"]], "get_target_probabilities() (netin.pah method)": [[1, "netin.PAH.get_target_probabilities"]], "get_target_probabilities() (netin.patc method)": [[1, "netin.PATC.get_target_probabilities"]], "get_target_probabilities() (netin.patch method)": [[1, "netin.PATCH.get_target_probabilities"]], "get_target_probabilities_regular() (netin.patc method)": [[1, "netin.PATC.get_target_probabilities_regular"]], "get_target_probabilities_regular() (netin.patch method)": [[1, "netin.PATCH.get_target_probabilities_regular"]], "infer_homophily_values() (netin.pah method)": [[1, "netin.PAH.infer_homophily_values"]], "infer_homophily_values() (netin.patch method)": [[1, "netin.PATCH.infer_homophily_values"]], "infer_triadic_closure() (netin.patc method)": [[1, "netin.PATC.infer_triadic_closure"]], "infer_triadic_closure() (netin.patch method)": [[1, "netin.PATCH.infer_triadic_closure"]], "info_computed() (netin.pah method)": [[1, "netin.PAH.info_computed"]], "info_computed() (netin.patch method)": [[1, "netin.PATCH.info_computed"]], "info_computed() (netin.undigraph method)": [[1, "netin.UnDiGraph.info_computed"]], "info_params() (netin.pah method)": [[1, "netin.PAH.info_params"]], "info_params() (netin.patc method)": [[1, "netin.PATC.info_params"]], "info_params() (netin.patch method)": [[1, "netin.PATCH.info_params"]], "info_params() (netin.undigraph method)": [[1, "netin.UnDiGraph.info_params"]], "update_special_targets() (netin.patc method)": [[1, "netin.PATC.update_special_targets"]], "module": [[2, "module-netin"], [4, "module-netin.stats.distributions"], [4, "module-netin.stats.ranking"], [5, "module-netin.viz.handlers"]], "netin": [[2, "module-netin"]], "homophily (class in netin)": [[3, "netin.Homophily"]], "triadicclosure (class in netin)": [[3, "netin.TriadicClosure"]], "get_homophily_between_source_and_target() (netin.homophily method)": [[3, "netin.Homophily.get_homophily_between_source_and_target"]], "get_homophily_majority() (netin.homophily method)": [[3, "netin.Homophily.get_homophily_majority"]], "get_homophily_minority() (netin.homophily method)": [[3, "netin.Homophily.get_homophily_minority"]], "get_metadata_as_dict() (netin.homophily method)": [[3, "netin.Homophily.get_metadata_as_dict"]], "get_metadata_as_dict() (netin.triadicclosure method)": [[3, "netin.TriadicClosure.get_metadata_as_dict"]], "get_special_targets() (netin.triadicclosure method)": [[3, "netin.TriadicClosure.get_special_targets"]], "get_target() (netin.homophily method)": [[3, "netin.Homophily.get_target"]], "get_target() (netin.triadicclosure method)": [[3, "netin.TriadicClosure.get_target"]], "get_target_probabilities() (netin.homophily method)": [[3, "netin.Homophily.get_target_probabilities"]], "get_target_probabilities() (netin.triadicclosure method)": [[3, "netin.TriadicClosure.get_target_probabilities"]], "get_triadic_closure() (netin.triadicclosure method)": [[3, "netin.TriadicClosure.get_triadic_closure"]], "infer_homophily_values() (netin.homophily method)": [[3, "netin.Homophily.infer_homophily_values"]], "info_computed() (netin.homophily method)": [[3, "netin.Homophily.info_computed"]], "info_computed() (netin.triadicclosure method)": [[3, "netin.TriadicClosure.info_computed"]], "info_params() (netin.homophily method)": [[3, "netin.Homophily.info_params"]], "info_params() (netin.triadicclosure method)": [[3, "netin.TriadicClosure.info_params"]], "set_homophily_majority() (netin.homophily method)": [[3, "netin.Homophily.set_homophily_majority"]], "set_homophily_minority() (netin.homophily method)": [[3, "netin.Homophily.set_homophily_minority"]], "set_triadic_closure() (netin.triadicclosure method)": [[3, "netin.TriadicClosure.set_triadic_closure"]], "update_special_targets() (netin.triadicclosure method)": [[3, "netin.TriadicClosure.update_special_targets"]], "fit_power_law() (in module netin.stats.distributions)": [[4, "netin.stats.distributions.fit_power_law"]], "get_ccdf() (in module netin.stats.distributions)": [[4, "netin.stats.distributions.get_ccdf"]], "get_cdf() (in module netin.stats.distributions)": [[4, "netin.stats.distributions.get_cdf"]], "get_disparity() (in module netin.stats.distributions)": [[4, "netin.stats.distributions.get_disparity"]], "get_fraction_of_minority() (in module netin.stats.distributions)": [[4, "netin.stats.distributions.get_fraction_of_minority"]], "get_fraction_of_minority_in_ranking() (in module netin.stats.ranking)": [[4, "netin.stats.ranking.get_fraction_of_minority_in_ranking"]], "get_gini_coefficient() (in module netin.stats.distributions)": [[4, "netin.stats.distributions.get_gini_coefficient"]], "get_gini_in_ranking() (in module netin.stats.ranking)": [[4, "netin.stats.ranking.get_gini_in_ranking"]], "get_pdf() (in module netin.stats.distributions)": [[4, "netin.stats.distributions.get_pdf"]], "get_ranking_inequality() (in module netin.stats.ranking)": [[4, "netin.stats.ranking.get_ranking_inequality"]], "get_ranking_inequality_class() (in module netin.stats.ranking)": [[4, "netin.stats.ranking.get_ranking_inequality_class"]], "get_ranking_inequity() (in module netin.stats.ranking)": [[4, "netin.stats.ranking.get_ranking_inequity"]], "get_ranking_inequity_class() (in module netin.stats.ranking)": [[4, "netin.stats.ranking.get_ranking_inequity_class"]], "gini() (in module netin.stats.ranking)": [[4, "netin.stats.ranking.gini"]], "netin.stats.distributions": [[4, "module-netin.stats.distributions"]], "netin.stats.ranking": [[4, "module-netin.stats.ranking"]], "netin.viz.handlers": [[5, "module-netin.viz.handlers"]], "plot_disparity() (in module netin.viz.handlers)": [[5, "netin.viz.handlers.plot_disparity"]], "plot_distribution() (in module netin.viz.handlers)": [[5, "netin.viz.handlers.plot_distribution"]], "plot_fraction_of_minority() (in module netin.viz.handlers)": [[5, "netin.viz.handlers.plot_fraction_of_minority"]], "plot_gini_coefficient() (in module netin.viz.handlers)": [[5, "netin.viz.handlers.plot_gini_coefficient"]], "plot_graph() (in module netin.viz.handlers)": [[5, "netin.viz.handlers.plot_graph"]], "plot_powerlaw_fit() (in module netin.viz.handlers)": [[5, "netin.viz.handlers.plot_powerlaw_fit"]], "reset_style() (in module netin.viz.handlers)": [[5, "netin.viz.handlers.reset_style"]], "set_paper_style() (in module netin.viz.handlers)": [[5, "netin.viz.handlers.set_paper_style"]]}})