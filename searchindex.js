Search.setIndex({"alltitles": {"Algorithms": [[0, null]], "Contents:": [[0, null], [4, null], [5, null]], "Directed Graphs": [[2, null]], "Graphs": [[4, null]], "Indices and tables": [[5, "indices-and-tables"]], "Mechanisms": [[6, null]], "Network Inequality": [[5, null]], "Notes": [[1, "notes"], [2, "notes"], [2, "id10"], [2, "id13"], [2, "id20"], [2, "id28"], [3, "notes"], [3, "id9"], [3, "id16"], [3, "id25"], [3, "id33"], [3, "id37"], [3, "id49"], [6, "notes"], [6, "id12"], [7, "notes"], [7, "id34"], [7, "id39"]], "Parameters": [[1, "parameters"], [1, "id1"], [1, "id2"], [1, "id3"], [1, "id4"], [1, "id5"], [1, "id6"], [2, "parameters"], [2, "id8"], [2, "id11"], [2, "id12"], [2, "id15"], [2, "id18"], [2, "id19"], [2, "id23"], [2, "id25"], [2, "id27"], [2, "id31"], [2, "id34"], [3, "parameters"], [3, "id6"], [3, "id8"], [3, "id11"], [3, "id13"], [3, "id15"], [3, "id19"], [3, "id22"], [3, "id24"], [3, "id27"], [3, "id30"], [3, "id35"], [3, "id36"], [3, "id42"], [3, "id44"], [3, "id48"], [3, "id52"], [6, "parameters"], [6, "id1"], [6, "id5"], [6, "id7"], [6, "id8"], [6, "id10"], [6, "id11"], [6, "id13"], [6, "id18"], [6, "id20"], [6, "id23"], [6, "id24"], [6, "id25"], [7, "parameters"], [7, "id1"], [7, "id3"], [7, "id5"], [7, "id7"], [7, "id9"], [7, "id11"], [7, "id13"], [7, "id15"], [7, "id17"], [7, "id19"], [7, "id21"], [7, "id22"], [7, "id24"], [7, "id26"], [7, "id28"], [7, "id30"], [7, "id32"], [7, "id35"], [7, "id37"], [7, "id40"], [8, "parameters"], [8, "id1"], [8, "id2"], [8, "id3"], [8, "id4"], [8, "id5"], [8, "id6"]], "References": [[1, "references"], [2, "references"], [3, "references"], [7, "references"]], "Returns": [[2, "returns"], [2, "id1"], [2, "id2"], [2, "id3"], [2, "id4"], [2, "id5"], [2, "id6"], [2, "id7"], [2, "id9"], [2, "id16"], [2, "id17"], [2, "id24"], [2, "id26"], [2, "id32"], [2, "id33"], [3, "returns"], [3, "id4"], [3, "id5"], [3, "id7"], [3, "id12"], [3, "id14"], [3, "id20"], [3, "id21"], [3, "id23"], [3, "id28"], [3, "id29"], [3, "id31"], [3, "id32"], [3, "id41"], [3, "id43"], [3, "id45"], [3, "id46"], [3, "id47"], [3, "id53"], [6, "returns"], [6, "id2"], [6, "id3"], [6, "id4"], [6, "id6"], [6, "id9"], [6, "id14"], [6, "id15"], [6, "id16"], [6, "id17"], [6, "id19"], [6, "id21"], [6, "id22"], [7, "returns"], [7, "id2"], [7, "id4"], [7, "id6"], [7, "id8"], [7, "id10"], [7, "id12"], [7, "id14"], [7, "id16"], [7, "id18"], [7, "id20"], [7, "id23"], [7, "id25"], [7, "id27"], [7, "id29"], [7, "id31"], [7, "id33"], [7, "id36"], [7, "id38"], [7, "id41"]], "Sampling": [[1, null]], "See Also": [[3, "see-also"]], "Statistics": [[7, null]], "Undirected Graphs": [[3, null]], "Visualization": [[8, null]]}, "docnames": ["algorithms", "algorithms/sampling", "generators/directed", "generators/undirected", "graphs", "index", "mechanisms", "statistics", "visualizations"], "envversion": {"sphinx": 62, "sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2}, "filenames": ["algorithms.rst", "algorithms/sampling.rst", "generators/directed.rst", "generators/undirected.rst", "graphs.rst", "index.rst", "mechanisms.rst", "statistics.rst", "visualizations.rst"], "indexentries": {"calculate_degree_powerlaw_exponents() (netin.undigraph method)": [[3, "netin.UnDiGraph.calculate_degree_powerlaw_exponents", false]], "calculate_in_degree_powerlaw_exponents() (netin.digraph method)": [[2, "netin.DiGraph.calculate_in_degree_powerlaw_exponents", false]], "calculate_out_degree_powerlaw_exponents() (netin.digraph method)": [[2, "netin.DiGraph.calculate_out_degree_powerlaw_exponents", false]], "degreegrouprank (class in netin.sampling)": [[1, "netin.sampling.DegreeGroupRank", false]], "degreerank (class in netin.sampling)": [[1, "netin.sampling.DegreeRank", false]], "dh (class in netin)": [[2, "netin.DH", false]], "digraph (class in netin)": [[2, "netin.DiGraph", false]], "dpa (class in netin)": [[2, "netin.DPA", false]], "dpah (class in netin)": [[2, "netin.DPAH", false]], "fit() (netin.pa static method)": [[3, "netin.PA.fit", false]], "fit() (netin.pah static method)": [[3, "netin.PAH.fit", false]], "fit() (netin.patc static method)": [[3, "netin.PATC.fit", false]], "fit_degree_powerlaw() (netin.undigraph method)": [[3, "netin.UnDiGraph.fit_degree_powerlaw", false]], "fit_power_law() (in module netin.stats.distributions)": [[7, "netin.stats.distributions.fit_power_law", false]], "generate() (netin.digraph method)": [[2, "netin.DiGraph.generate", false]], "generate() (netin.undigraph method)": [[3, "netin.UnDiGraph.generate", false]], "get_activity_distribution() (netin.digraph method)": [[2, "netin.DiGraph.get_activity_distribution", false]], "get_average_degree() (in module netin.stats.networks)": [[7, "netin.stats.networks.get_average_degree", false]], "get_average_degrees() (in module netin.stats.networks)": [[7, "netin.stats.networks.get_average_degrees", false]], "get_ccdf() (in module netin.stats.distributions)": [[7, "netin.stats.distributions.get_ccdf", false]], "get_cdf() (in module netin.stats.distributions)": [[7, "netin.stats.distributions.get_cdf", false]], "get_disparity() (in module netin.stats.distributions)": [[7, "netin.stats.distributions.get_disparity", false]], "get_edge_type_counts() (in module netin.stats.networks)": [[7, "netin.stats.networks.get_edge_type_counts", false]], "get_expected_density() (netin.digraph method)": [[2, "netin.DiGraph.get_expected_density", false]], "get_expected_number_of_edges() (netin.digraph method)": [[2, "netin.DiGraph.get_expected_number_of_edges", false]], "get_expected_number_of_edges() (netin.undigraph method)": [[3, "netin.UnDiGraph.get_expected_number_of_edges", false]], "get_expected_powerlaw_out_degree_majority() (netin.digraph method)": [[2, "netin.DiGraph.get_expected_powerlaw_out_degree_majority", false]], "get_expected_powerlaw_out_degree_minority() (netin.digraph method)": [[2, "netin.DiGraph.get_expected_powerlaw_out_degree_minority", false]], "get_fraction_of_minority() (in module netin.stats.distributions)": [[7, "netin.stats.distributions.get_fraction_of_minority", false]], "get_fraction_of_minority_in_ranking() (in module netin.stats.ranking)": [[7, "netin.stats.ranking.get_fraction_of_minority_in_ranking", false]], "get_gini_coefficient() (in module netin.stats.distributions)": [[7, "netin.stats.distributions.get_gini_coefficient", false]], "get_gini_in_ranking() (in module netin.stats.ranking)": [[7, "netin.stats.ranking.get_gini_in_ranking", false]], "get_homophily_between_source_and_target() (netin.homophily method)": [[6, "netin.Homophily.get_homophily_between_source_and_target", false]], "get_homophily_majority() (netin.homophily method)": [[6, "netin.Homophily.get_homophily_majority", false]], "get_homophily_minority() (netin.homophily method)": [[6, "netin.Homophily.get_homophily_minority", false]], "get_in_degree() (netin.dpa method)": [[2, "netin.DPA.get_in_degree", false]], "get_metadata_as_dict() (netin.digraph method)": [[2, "netin.DiGraph.get_metadata_as_dict", false]], "get_metadata_as_dict() (netin.homophily method)": [[6, "netin.Homophily.get_metadata_as_dict", false]], "get_metadata_as_dict() (netin.pah method)": [[3, "netin.PAH.get_metadata_as_dict", false]], "get_metadata_as_dict() (netin.patc method)": [[3, "netin.PATC.get_metadata_as_dict", false]], "get_metadata_as_dict() (netin.patch method)": [[3, "netin.PATCH.get_metadata_as_dict", false]], "get_metadata_as_dict() (netin.triadicclosure method)": [[6, "netin.TriadicClosure.get_metadata_as_dict", false]], "get_metadata_as_dict() (netin.undigraph method)": [[3, "netin.UnDiGraph.get_metadata_as_dict", false]], "get_min_degree() (in module netin.stats.networks)": [[7, "netin.stats.networks.get_min_degree", false]], "get_minority_fraction() (in module netin.stats.networks)": [[7, "netin.stats.networks.get_minority_fraction", false]], "get_node_attributes() (in module netin.stats.networks)": [[7, "netin.stats.networks.get_node_attributes", false]], "get_pdf() (in module netin.stats.distributions)": [[7, "netin.stats.distributions.get_pdf", false]], "get_ranking_inequality() (in module netin.stats.ranking)": [[7, "netin.stats.ranking.get_ranking_inequality", false]], "get_ranking_inequality_class() (in module netin.stats.ranking)": [[7, "netin.stats.ranking.get_ranking_inequality_class", false]], "get_ranking_inequity() (in module netin.stats.ranking)": [[7, "netin.stats.ranking.get_ranking_inequity", false]], "get_ranking_inequity_class() (in module netin.stats.ranking)": [[7, "netin.stats.ranking.get_ranking_inequity_class", false]], "get_similitude() (in module netin.stats.networks)": [[7, "netin.stats.networks.get_similitude", false]], "get_sources() (netin.digraph method)": [[2, "netin.DiGraph.get_sources", false]], "get_target() (netin.digraph method)": [[2, "netin.DiGraph.get_target", false]], "get_target() (netin.homophily method)": [[6, "netin.Homophily.get_target", false]], "get_target() (netin.undigraph method)": [[3, "netin.UnDiGraph.get_target", false]], "get_target_probabilities() (netin.dh method)": [[2, "netin.DH.get_target_probabilities", false]], "get_target_probabilities() (netin.dpa method)": [[2, "netin.DPA.get_target_probabilities", false]], "get_target_probabilities() (netin.dpah method)": [[2, "netin.DPAH.get_target_probabilities", false]], "get_target_probabilities() (netin.homophily method)": [[6, "netin.Homophily.get_target_probabilities", false]], "get_target_probabilities() (netin.pa method)": [[3, "netin.PA.get_target_probabilities", false]], "get_target_probabilities() (netin.pah method)": [[3, "netin.PAH.get_target_probabilities", false]], "get_target_probabilities() (netin.patch method)": [[3, "netin.PATCH.get_target_probabilities", false]], "get_target_probabilities() (netin.triadicclosure method)": [[6, "netin.TriadicClosure.get_target_probabilities", false]], "get_target_probabilities_regular() (netin.patc method)": [[3, "netin.PATC.get_target_probabilities_regular", false]], "get_target_probabilities_regular() (netin.patch method)": [[3, "netin.PATCH.get_target_probabilities_regular", false]], "get_target_probabilities_regular() (netin.tch method)": [[3, "netin.TCH.get_target_probabilities_regular", false]], "get_triadic_closure() (netin.triadicclosure method)": [[6, "netin.TriadicClosure.get_triadic_closure", false]], "gini() (in module netin.stats.ranking)": [[7, "netin.stats.ranking.gini", false]], "homophily (class in netin)": [[6, "netin.Homophily", false]], "infer_homophily_values() (netin.dh method)": [[2, "netin.DH.infer_homophily_values", false]], "infer_homophily_values() (netin.dpah method)": [[2, "netin.DPAH.infer_homophily_values", false]], "infer_homophily_values() (netin.homophily method)": [[6, "netin.Homophily.infer_homophily_values", false]], "infer_homophily_values() (netin.pah method)": [[3, "netin.PAH.infer_homophily_values", false]], "infer_homophily_values() (netin.patch method)": [[3, "netin.PATCH.infer_homophily_values", false]], "infer_triadic_closure() (netin.patch method)": [[3, "netin.PATCH.infer_triadic_closure", false]], "infer_triadic_closure() (netin.tch method)": [[3, "netin.TCH.infer_triadic_closure", false]], "infer_triadic_closure() (netin.triadicclosure method)": [[6, "netin.TriadicClosure.infer_triadic_closure", false]], "info() (netin.sampling.sampling method)": [[1, "netin.sampling.Sampling.info", false]], "info_computed() (netin.dh method)": [[2, "netin.DH.info_computed", false]], "info_computed() (netin.digraph method)": [[2, "netin.DiGraph.info_computed", false]], "info_computed() (netin.dpah method)": [[2, "netin.DPAH.info_computed", false]], "info_computed() (netin.homophily method)": [[6, "netin.Homophily.info_computed", false]], "info_computed() (netin.pah method)": [[3, "netin.PAH.info_computed", false]], "info_computed() (netin.patch method)": [[3, "netin.PATCH.info_computed", false]], "info_computed() (netin.tch method)": [[3, "netin.TCH.info_computed", false]], "info_computed() (netin.triadicclosure method)": [[6, "netin.TriadicClosure.info_computed", false]], "info_computed() (netin.undigraph method)": [[3, "netin.UnDiGraph.info_computed", false]], "info_params() (netin.dh method)": [[2, "netin.DH.info_params", false]], "info_params() (netin.digraph method)": [[2, "netin.DiGraph.info_params", false]], "info_params() (netin.dpah method)": [[2, "netin.DPAH.info_params", false]], "info_params() (netin.homophily method)": [[6, "netin.Homophily.info_params", false]], "info_params() (netin.pah method)": [[3, "netin.PAH.info_params", false]], "info_params() (netin.patc method)": [[3, "netin.PATC.info_params", false]], "info_params() (netin.patch method)": [[3, "netin.PATCH.info_params", false]], "info_params() (netin.tch method)": [[3, "netin.TCH.info_params", false]], "info_params() (netin.triadicclosure method)": [[6, "netin.TriadicClosure.info_params", false]], "info_params() (netin.undigraph method)": [[3, "netin.UnDiGraph.info_params", false]], "init_activity() (netin.digraph method)": [[2, "netin.DiGraph.init_activity", false]], "init_edges() (netin.digraph method)": [[2, "netin.DiGraph.init_edges", false]], "init_special_targets() (netin.triadicclosure method)": [[6, "netin.TriadicClosure.init_special_targets", false]], "initialize() (netin.dh method)": [[2, "netin.DH.initialize", false]], "initialize() (netin.digraph method)": [[2, "netin.DiGraph.initialize", false]], "initialize() (netin.dpah method)": [[2, "netin.DPAH.initialize", false]], "initialize() (netin.homophily method)": [[6, "netin.Homophily.initialize", false]], "initialize() (netin.pah method)": [[3, "netin.PAH.initialize", false]], "initialize() (netin.triadicclosure method)": [[6, "netin.TriadicClosure.initialize", false]], "makecopy() (netin.dh method)": [[2, "netin.DH.makecopy", false]], "makecopy() (netin.digraph method)": [[2, "netin.DiGraph.makecopy", false]], "makecopy() (netin.dpa method)": [[2, "netin.DPA.makecopy", false]], "makecopy() (netin.dpah method)": [[2, "netin.DPAH.makecopy", false]], "makecopy() (netin.pa method)": [[3, "netin.PA.makecopy", false]], "makecopy() (netin.pah method)": [[3, "netin.PAH.makecopy", false]], "makecopy() (netin.patc method)": [[3, "netin.PATC.makecopy", false]], "makecopy() (netin.patch method)": [[3, "netin.PATCH.makecopy", false]], "makecopy() (netin.tch method)": [[3, "netin.TCH.makecopy", false]], "makecopy() (netin.undigraph method)": [[3, "netin.UnDiGraph.makecopy", false]], "method_name (netin.sampling.degreegrouprank property)": [[1, "netin.sampling.DegreeGroupRank.method_name", false]], "method_name (netin.sampling.degreerank property)": [[1, "netin.sampling.DegreeRank.method_name", false]], "method_name (netin.sampling.partialcrawls property)": [[1, "netin.sampling.PartialCrawls.method_name", false]], "method_name (netin.sampling.randomedges property)": [[1, "netin.sampling.RandomEdges.method_name", false]], "method_name (netin.sampling.randomneighbor property)": [[1, "netin.sampling.RandomNeighbor.method_name", false]], "method_name (netin.sampling.randomnodes property)": [[1, "netin.sampling.RandomNodes.method_name", false]], "method_name (netin.sampling.sampling property)": [[1, "netin.sampling.Sampling.method_name", false]], "module": [[0, "module-netin.sampling", false], [5, "module-netin", false], [7, "module-netin.stats.distributions", false], [7, "module-netin.stats.networks", false], [7, "module-netin.stats.ranking", false], [8, "module-netin.viz.handlers", false]], "netin": [[5, "module-netin", false]], "netin.sampling": [[0, "module-netin.sampling", false]], "netin.stats.distributions": [[7, "module-netin.stats.distributions", false]], "netin.stats.networks": [[7, "module-netin.stats.networks", false]], "netin.stats.ranking": [[7, "module-netin.stats.ranking", false]], "netin.viz.handlers": [[8, "module-netin.viz.handlers", false]], "on_edge_added() (netin.triadicclosure method)": [[6, "netin.TriadicClosure.on_edge_added", false]], "pa (class in netin)": [[3, "netin.PA", false]], "pah (class in netin)": [[3, "netin.PAH", false]], "partialcrawls (class in netin.sampling)": [[1, "netin.sampling.PartialCrawls", false]], "patc (class in netin)": [[3, "netin.PATC", false]], "patch (class in netin)": [[3, "netin.PATCH", false]], "plot_disparity() (in module netin.viz.handlers)": [[8, "netin.viz.handlers.plot_disparity", false]], "plot_distribution() (in module netin.viz.handlers)": [[8, "netin.viz.handlers.plot_distribution", false]], "plot_fraction_of_minority() (in module netin.viz.handlers)": [[8, "netin.viz.handlers.plot_fraction_of_minority", false]], "plot_gini_coefficient() (in module netin.viz.handlers)": [[8, "netin.viz.handlers.plot_gini_coefficient", false]], "plot_graph() (in module netin.viz.handlers)": [[8, "netin.viz.handlers.plot_graph", false]], "plot_powerlaw_fit() (in module netin.viz.handlers)": [[8, "netin.viz.handlers.plot_powerlaw_fit", false]], "randomedges (class in netin.sampling)": [[1, "netin.sampling.RandomEdges", false]], "randomneighbor (class in netin.sampling)": [[1, "netin.sampling.RandomNeighbor", false]], "randomnodes (class in netin.sampling)": [[1, "netin.sampling.RandomNodes", false]], "reset_style() (in module netin.viz.handlers)": [[8, "netin.viz.handlers.reset_style", false]], "sampling (class in netin.sampling)": [[1, "netin.sampling.Sampling", false]], "sampling() (netin.sampling.degreegrouprank method)": [[1, "netin.sampling.DegreeGroupRank.sampling", false]], "sampling() (netin.sampling.degreerank method)": [[1, "netin.sampling.DegreeRank.sampling", false]], "sampling() (netin.sampling.partialcrawls method)": [[1, "netin.sampling.PartialCrawls.sampling", false]], "sampling() (netin.sampling.randomedges method)": [[1, "netin.sampling.RandomEdges.sampling", false]], "sampling() (netin.sampling.randomneighbor method)": [[1, "netin.sampling.RandomNeighbor.sampling", false]], "sampling() (netin.sampling.randomnodes method)": [[1, "netin.sampling.RandomNodes.sampling", false]], "sampling() (netin.sampling.sampling method)": [[1, "netin.sampling.Sampling.sampling", false]], "set_homophily_majority() (netin.homophily method)": [[6, "netin.Homophily.set_homophily_majority", false]], "set_homophily_minority() (netin.homophily method)": [[6, "netin.Homophily.set_homophily_minority", false]], "set_paper_style() (in module netin.viz.handlers)": [[8, "netin.viz.handlers.set_paper_style", false]], "set_triadic_closure() (netin.triadicclosure method)": [[6, "netin.TriadicClosure.set_triadic_closure", false]], "tch (class in netin)": [[3, "netin.TCH", false]], "triadicclosure (class in netin)": [[6, "netin.TriadicClosure", false]], "undigraph (class in netin)": [[3, "netin.UnDiGraph", false]], "validate_parameters() (netin.digraph method)": [[2, "netin.DiGraph.validate_parameters", false]], "validate_parameters() (netin.homophily method)": [[6, "netin.Homophily.validate_parameters", false]], "validate_parameters() (netin.pah method)": [[3, "netin.PAH.validate_parameters", false]], "validate_parameters() (netin.patc method)": [[3, "netin.PATC.validate_parameters", false]], "validate_parameters() (netin.patch method)": [[3, "netin.PATCH.validate_parameters", false]], "validate_parameters() (netin.triadicclosure method)": [[6, "netin.TriadicClosure.validate_parameters", false]], "validate_parameters() (netin.undigraph method)": [[3, "netin.UnDiGraph.validate_parameters", false]]}, "objects": {"": [[5, 0, 0, "-", "netin"]], "netin": [[2, 1, 1, "", "DH"], [2, 1, 1, "", "DPA"], [2, 1, 1, "", "DPAH"], [2, 1, 1, "", "DiGraph"], [6, 1, 1, "", "Homophily"], [3, 1, 1, "", "PA"], [3, 1, 1, "", "PAH"], [3, 1, 1, "", "PATC"], [3, 1, 1, "", "PATCH"], [3, 1, 1, "", "TCH"], [6, 1, 1, "", "TriadicClosure"], [3, 1, 1, "", "UnDiGraph"], [0, 0, 0, "-", "sampling"]], "netin.DH": [[2, 2, 1, "", "get_target_probabilities"], [2, 2, 1, "", "infer_homophily_values"], [2, 2, 1, "", "info_computed"], [2, 2, 1, "", "info_params"], [2, 2, 1, "", "initialize"], [2, 2, 1, "", "makecopy"]], "netin.DPA": [[2, 2, 1, "", "get_in_degree"], [2, 2, 1, "", "get_target_probabilities"], [2, 2, 1, "", "makecopy"]], "netin.DPAH": [[2, 2, 1, "", "get_target_probabilities"], [2, 2, 1, "", "infer_homophily_values"], [2, 2, 1, "", "info_computed"], [2, 2, 1, "", "info_params"], [2, 2, 1, "", "initialize"], [2, 2, 1, "", "makecopy"]], "netin.DiGraph": [[2, 2, 1, "", "calculate_in_degree_powerlaw_exponents"], [2, 2, 1, "", "calculate_out_degree_powerlaw_exponents"], [2, 2, 1, "", "generate"], [2, 2, 1, "", "get_activity_distribution"], [2, 2, 1, "", "get_expected_density"], [2, 2, 1, "", "get_expected_number_of_edges"], [2, 2, 1, "", "get_expected_powerlaw_out_degree_majority"], [2, 2, 1, "", "get_expected_powerlaw_out_degree_minority"], [2, 2, 1, "", "get_metadata_as_dict"], [2, 2, 1, "", "get_sources"], [2, 2, 1, "", "get_target"], [2, 2, 1, "", "info_computed"], [2, 2, 1, "", "info_params"], [2, 2, 1, "", "init_activity"], [2, 2, 1, "", "init_edges"], [2, 2, 1, "", "initialize"], [2, 2, 1, "", "makecopy"], [2, 2, 1, "", "validate_parameters"]], "netin.Homophily": [[6, 2, 1, "", "get_homophily_between_source_and_target"], [6, 2, 1, "", "get_homophily_majority"], [6, 2, 1, "", "get_homophily_minority"], [6, 2, 1, "", "get_metadata_as_dict"], [6, 2, 1, "", "get_target"], [6, 2, 1, "", "get_target_probabilities"], [6, 2, 1, "", "infer_homophily_values"], [6, 2, 1, "", "info_computed"], [6, 2, 1, "", "info_params"], [6, 2, 1, "", "initialize"], [6, 2, 1, "", "set_homophily_majority"], [6, 2, 1, "", "set_homophily_minority"], [6, 2, 1, "", "validate_parameters"]], "netin.PA": [[3, 2, 1, "", "fit"], [3, 2, 1, "", "get_target_probabilities"], [3, 2, 1, "", "makecopy"]], "netin.PAH": [[3, 2, 1, "", "fit"], [3, 2, 1, "", "get_metadata_as_dict"], [3, 2, 1, "", "get_target_probabilities"], [3, 2, 1, "", "infer_homophily_values"], [3, 2, 1, "", "info_computed"], [3, 2, 1, "", "info_params"], [3, 2, 1, "", "initialize"], [3, 2, 1, "", "makecopy"], [3, 2, 1, "", "validate_parameters"]], "netin.PATC": [[3, 2, 1, "", "fit"], [3, 2, 1, "", "get_metadata_as_dict"], [3, 2, 1, "", "get_target_probabilities_regular"], [3, 2, 1, "", "info_params"], [3, 2, 1, "", "makecopy"], [3, 2, 1, "", "validate_parameters"]], "netin.PATCH": [[3, 2, 1, "", "get_metadata_as_dict"], [3, 2, 1, "", "get_target_probabilities"], [3, 2, 1, "", "get_target_probabilities_regular"], [3, 2, 1, "", "infer_homophily_values"], [3, 2, 1, "", "infer_triadic_closure"], [3, 2, 1, "", "info_computed"], [3, 2, 1, "", "info_params"], [3, 2, 1, "", "makecopy"], [3, 2, 1, "", "validate_parameters"]], "netin.TCH": [[3, 2, 1, "", "get_target_probabilities_regular"], [3, 2, 1, "", "infer_triadic_closure"], [3, 2, 1, "", "info_computed"], [3, 2, 1, "", "info_params"], [3, 2, 1, "", "makecopy"]], "netin.TriadicClosure": [[6, 2, 1, "", "get_metadata_as_dict"], [6, 2, 1, "", "get_target_probabilities"], [6, 2, 1, "", "get_triadic_closure"], [6, 2, 1, "", "infer_triadic_closure"], [6, 2, 1, "", "info_computed"], [6, 2, 1, "", "info_params"], [6, 2, 1, "", "init_special_targets"], [6, 2, 1, "", "initialize"], [6, 2, 1, "", "on_edge_added"], [6, 2, 1, "", "set_triadic_closure"], [6, 2, 1, "", "validate_parameters"]], "netin.UnDiGraph": [[3, 2, 1, "", "calculate_degree_powerlaw_exponents"], [3, 2, 1, "", "fit_degree_powerlaw"], [3, 2, 1, "", "generate"], [3, 2, 1, "", "get_expected_number_of_edges"], [3, 2, 1, "", "get_metadata_as_dict"], [3, 2, 1, "", "get_target"], [3, 2, 1, "", "info_computed"], [3, 2, 1, "", "info_params"], [3, 2, 1, "", "makecopy"], [3, 2, 1, "", "validate_parameters"]], "netin.sampling": [[1, 1, 1, "", "DegreeGroupRank"], [1, 1, 1, "", "DegreeRank"], [1, 1, 1, "", "PartialCrawls"], [1, 1, 1, "", "RandomEdges"], [1, 1, 1, "", "RandomNeighbor"], [1, 1, 1, "", "RandomNodes"], [1, 1, 1, "", "Sampling"]], "netin.sampling.DegreeGroupRank": [[1, 3, 1, "", "method_name"], [1, 2, 1, "", "sampling"]], "netin.sampling.DegreeRank": [[1, 3, 1, "", "method_name"], [1, 2, 1, "", "sampling"]], "netin.sampling.PartialCrawls": [[1, 3, 1, "", "method_name"], [1, 2, 1, "", "sampling"]], "netin.sampling.RandomEdges": [[1, 3, 1, "", "method_name"], [1, 2, 1, "", "sampling"]], "netin.sampling.RandomNeighbor": [[1, 3, 1, "", "method_name"], [1, 2, 1, "", "sampling"]], "netin.sampling.RandomNodes": [[1, 3, 1, "", "method_name"], [1, 2, 1, "", "sampling"]], "netin.sampling.Sampling": [[1, 2, 1, "", "info"], [1, 3, 1, "", "method_name"], [1, 2, 1, "", "sampling"]], "netin.stats": [[7, 0, 0, "-", "distributions"], [7, 0, 0, "-", "networks"], [7, 0, 0, "-", "ranking"]], "netin.stats.distributions": [[7, 4, 1, "", "fit_power_law"], [7, 4, 1, "", "get_ccdf"], [7, 4, 1, "", "get_cdf"], [7, 4, 1, "", "get_disparity"], [7, 4, 1, "", "get_fraction_of_minority"], [7, 4, 1, "", "get_gini_coefficient"], [7, 4, 1, "", "get_pdf"]], "netin.stats.networks": [[7, 4, 1, "", "get_average_degree"], [7, 4, 1, "", "get_average_degrees"], [7, 4, 1, "", "get_edge_type_counts"], [7, 4, 1, "", "get_min_degree"], [7, 4, 1, "", "get_minority_fraction"], [7, 4, 1, "", "get_node_attributes"], [7, 4, 1, "", "get_similitude"]], "netin.stats.ranking": [[7, 4, 1, "", "get_fraction_of_minority_in_ranking"], [7, 4, 1, "", "get_gini_in_ranking"], [7, 4, 1, "", "get_ranking_inequality"], [7, 4, 1, "", "get_ranking_inequality_class"], [7, 4, 1, "", "get_ranking_inequity"], [7, 4, 1, "", "get_ranking_inequity_class"], [7, 4, 1, "", "gini"]], "netin.viz": [[8, 0, 0, "-", "handlers"]], "netin.viz.handlers": [[8, 4, 1, "", "plot_disparity"], [8, 4, 1, "", "plot_distribution"], [8, 4, 1, "", "plot_fraction_of_minority"], [8, 4, 1, "", "plot_gini_coefficient"], [8, 4, 1, "", "plot_graph"], [8, 4, 1, "", "plot_powerlaw_fit"], [8, 4, 1, "", "reset_style"], [8, 4, 1, "", "set_paper_style"]]}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "method", "Python method"], "3": ["py", "property", "Python property"], "4": ["py", "function", "Python function"]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:method", "3": "py:property", "4": "py:function"}, "terms": {"": [3, 8], "0": [2, 3, 6, 7, 8], "05": 7, "1": [1, 2, 3, 6, 7, 8], "100": 7, "11": 1, "11077": [2, 3], "12": 2, "14": 2, "1999": [2, 3], "2": [2, 3, 6], "20": 1, "2002": 3, "2017": 1, "2018": [2, 3], "2022": 2, "286": [2, 3], "3": 7, "5": [2, 3], "509": [2, 3], "512": [2, 3], "6": 7, "708": 1, "711": 1, "8": [2, 3], "A": [2, 8], "And": 8, "Be": 1, "By": 7, "For": 3, "If": [7, 8], "It": [2, 3, 5, 8], "No": 1, "One": 8, "The": [1, 2, 3, 6, 7, 8], "Then": 3, "These": 6, "activ": 2, "ad": [3, 6], "addit": [1, 2, 7, 8], "adjust": 8, "albert": [2, 3], "algorithm": [2, 5], "all": [2, 3, 7, 8], "allow": 8, "also": 2, "among": 8, "amount": [7, 8], "an": [2, 3, 6], "analysi": 5, "analyt": [2, 3, 6], "ani": [3, 6], "ar": [2, 3, 6, 7, 8], "area": 8, "argument": [7, 8], "arrai": [2, 3, 6, 7], "arrow": 8, "arrow_s": 8, "arrow_styl": 8, "asc": 1, "assum": 7, "attach": [2, 3], "attribut": [1, 2, 3, 6, 7], "avail": [3, 6], "available_nod": [2, 3, 6], "averag": [7, 8], "ax": 8, "axi": 8, "b": [1, 3], "ba": [2, 3], "barabasi": [2, 3], "barabasialbert1999": [2, 3], "base": [1, 2, 3, 5, 6], "bbox": 8, "best": 8, "beta": [7, 8], "between": [2, 3, 6, 7, 8], "binari": 7, "blank": 8, "bool": [3, 7, 8], "bottom": 8, "bound": 8, "box": 8, "c": [2, 3], "calcul": [2, 7], "calculate_degree_powerlaw_expon": 3, "calculate_in_degree_powerlaw_expon": 2, "calculate_out_degree_powerlaw_expon": 2, "call": 1, "callabl": 8, "candid": 3, "ccdf": [7, 8], "cdf": [7, 8], "cell": 8, "cell_siz": 8, "center": 8, "chosen": [2, 3], "circl": 8, "class": [1, 2, 3, 6, 7, 8], "class_attribut": [2, 3, 6, 7], "class_label": [2, 3, 6], "class_label_legend": 8, "class_valu": [2, 3, 6], "close": 3, "closur": [3, 6], "cluster": 3, "coeffici": [7, 8], "col_nam": 8, "color": 8, "column": [7, 8], "common_norm": 8, "complementari": 7, "comput": [2, 3, 6, 7], "confid": 1, "connect": [3, 6], "consid": 3, "constructor": 7, "contain": [6, 7], "coordin": 8, "copi": [1, 2, 3], "core": 7, "count": 7, "counter": 7, "crawl": 1, "creat": [1, 2, 3, 6], "cumul": 7, "current": [2, 3], "cut": [7, 8], "d": 2, "dash": 8, "data": [7, 8], "datafram": [7, 8], "default": [3, 7, 8], "degre": [1, 2, 3, 7, 8], "degreegrouprank": [0, 1, 5], "degreerank": [0, 1, 5], "denser": 3, "densiti": [2, 7], "depend": [2, 3], "deriv": 3, "desc": 1, "detail": 7, "determin": 7, "df": 7, "dh": [2, 4, 5], "dict": [1, 2, 3, 6, 7, 8], "dictionari": [2, 3, 6], "digraph": [1, 2, 4, 5, 7], "direct": [4, 5], "directli": 6, "discret": 7, "dispar": [7, 8], "distanc": 7, "distribut": [2, 3, 7, 8], "doe": [1, 6], "dpa": [2, 4, 5], "dpah": [2, 4, 5], "dph": 2, "drawn": [2, 3], "dynam": 6, "e": [2, 3, 5, 6, 7, 8], "each": [2, 3, 7, 8], "edg": [1, 2, 3, 6, 7, 8], "edge_arrow": 8, "edge_list": 2, "edge_styl": 8, "edge_width": 8, "effect": 1, "either": 3, "emerg": [2, 3, 6], "empir": 8, "empti": 6, "enough": 1, "entir": 7, "equal": [6, 7], "erdo": 2, "error": [7, 8], "espin": [2, 7], "esp\u00edn": 2, "estim": 1, "everytim": 3, "expect": [2, 3], "expon": [2, 3], "express": 8, "extract_subgraph": 1, "f": 2, "f_m": [2, 3, 6, 7], "factor": 8, "fair": [7, 8], "fals": [7, 8], "famili": 8, "figur": 8, "file": 8, "filenam": 8, "fill": 8, "first": [6, 8], "fit": [3, 7, 8], "fit_degree_powerlaw": 3, "fit_m": 3, "fit_power_law": [5, 7], "float": [1, 2, 3, 6, 7, 8], "fn": 8, "follow": 3, "font": 8, "font_scal": 8, "format": [2, 3, 6], "four": 8, "fraction": [1, 2, 3, 6, 7, 8], "frame": 7, "free": 3, "from": [1, 2, 3, 6, 7, 8], "full": 3, "fulli": 3, "function": [5, 8], "g": [1, 3, 5, 7, 8], "gener": [1, 2, 3, 6], "get": [2, 3, 7, 8], "get_activity_distribut": 2, "get_average_degre": [5, 7], "get_ccdf": [5, 7], "get_cdf": [5, 7], "get_dispar": [5, 7], "get_edge_type_count": [5, 7], "get_expected_dens": 2, "get_expected_number_of_edg": [2, 3], "get_expected_powerlaw_out_degree_major": 2, "get_expected_powerlaw_out_degree_minor": 2, "get_fraction_of_minor": [5, 7], "get_fraction_of_minority_in_rank": [5, 7], "get_gini_coeffici": [5, 7], "get_gini_in_rank": [5, 7], "get_homophily_between_source_and_target": [5, 6], "get_homophily_major": [5, 6], "get_homophily_minor": [5, 6], "get_in_degre": 2, "get_metadata_as_dict": [2, 3, 5, 6], "get_min_degre": [5, 7], "get_minority_fract": [5, 7], "get_node_attribut": [5, 7], "get_pdf": [5, 7], "get_ranking_inequ": [5, 7], "get_ranking_inequality_class": [5, 7], "get_ranking_inequity_class": [5, 7], "get_similitud": [5, 7], "get_sourc": 2, "get_target": [2, 3, 5, 6], "get_target_prob": [2, 3, 5, 6], "get_target_probabilities_regular": 3, "get_triadic_closur": [5, 6], "get_x_y_from_df_fnc": 8, "gini": [5, 7, 8], "gini_fnc": 8, "gini_glob": 7, "given": [2, 3, 6, 7, 8], "global": 1, "graph": [1, 5, 6, 7, 8], "graphtc": 3, "grid": 8, "group": [1, 2, 6, 8], "grow": 3, "grown": [2, 3], "g\u00e9noi": [2, 3], "h": [2, 6], "h_": 3, "h_mm": [2, 3, 6], "ha": 2, "handler": 8, "have": 2, "height": 8, "here": 7, "heterophil": 3, "hline_fnc": 8, "hold": 7, "holm": 3, "holmekim2002": 3, "homophil": 3, "homophili": [2, 3, 5, 6], "hop": 6, "horizont": 8, "hspace": 8, "hue": 8, "i": [1, 2, 3, 5, 6, 7, 8], "icwsm": 1, "id": [2, 3, 6], "idx_target": 6, "ignore_singleton": 8, "implement": [3, 7], "in_degre": 2, "inch": 8, "includ": [1, 8], "index": [5, 6], "inequ": [2, 7, 8], "infer": [2, 3, 5, 6, 7], "infer_homophily_valu": [2, 3, 5, 6], "infer_triadic_closur": [3, 5, 6], "influenc": [2, 3], "info": [1, 6], "info_comput": [2, 3, 5, 6], "info_param": [2, 3, 5, 6], "inform": 3, "init_act": 2, "init_edg": 2, "init_special_target": [5, 6], "initi": [2, 3, 5, 6], "input": [2, 3, 6, 7], "instanc": [1, 2, 3], "int": [1, 2, 3, 6, 7, 8], "iter": 6, "its": [1, 2], "j": [1, 3], "k": [3, 7, 8], "karimi": [2, 3], "karimi2018": [2, 3], "kim": 3, "kind": 8, "known": 3, "kwarg": [1, 2, 7, 8], "label": [2, 3, 6, 7, 8], "law": [2, 7], "left": 8, "legend": 8, "length": 2, "level": [2, 3], "like": 2, "limit": 8, "line": 8, "link": [2, 3], "list": [2, 3, 6, 7, 8], "loc": 8, "locat": 8, "log": 8, "log_scal": 8, "lower": 8, "m": [2, 3, 6], "major": [2, 3, 6, 7], "make": [2, 3], "makecopi": [2, 3], "map": [2, 3, 6], "matplotlib": 8, "matrix": 6, "max_tri": 1, "maximum": [1, 2, 3, 6, 7], "me": 7, "me_fnc": 8, "mean": [7, 8], "measur": 7, "mechan": [2, 3, 5], "metadata": [2, 3, 6, 8], "method": 1, "method_nam": 1, "minimum": [2, 3, 6, 7], "minor": [2, 3, 6, 7, 8], "mix": 6, "model": [2, 3, 6], "moder": 7, "modifi": 1, "modul": 5, "more": [2, 7], "multipl": [6, 8], "must": 2, "n": [2, 3, 6], "name": [1, 2, 3, 6, 7, 8], "nc": 8, "ndarrai": [3, 7], "need": 3, "neighbor": [1, 6], "netin": [1, 2, 3, 5, 6, 7, 8], "network": [1, 2, 3, 7], "networkx": 5, "neutral": 3, "nevil": 1, "new": [1, 2, 3], "newli": [3, 6], "noboa": 2, "noboa2022": [2, 7], "node": [1, 2, 3, 6, 7, 8], "node_s": 8, "node_shap": 8, "none": [1, 2, 3, 6, 7, 8], "normal": [7, 8], "np": [2, 3, 6, 7], "number": [1, 2, 3, 6, 7, 8], "numpi": 7, "nx": 7, "o": 8, "obj": 6, "object": [1, 2, 3, 6], "older": 2, "on_edge_ad": [5, 6], "one": 8, "onli": 8, "op": 7, "option": 1, "order": 1, "origin": 1, "otherwis": [3, 8], "out": 2, "out_degre": 2, "over": [7, 8], "overrid": 3, "p": [2, 3], "p_": 3, "pa": [3, 4, 5], "packag": 5, "page": 5, "pah": [3, 4, 5], "panda": [7, 8], "paper": 8, "param": 2, "partial": 1, "partialcrawl": [0, 1, 5], "pass": [1, 7, 8], "patc": [3, 4, 5], "patch": [3, 4, 5], "pd": [7, 8], "pdf": 8, "peer": 1, "per": [1, 8], "phy": 3, "pick": [3, 6], "pl_m": 3, "plo_m": 2, "plot": 8, "plot_dispar": [5, 8], "plot_distribut": [5, 8], "plot_fraction_of_minor": [5, 8], "plot_gini_coeffici": [5, 8], "plot_graph": [5, 8], "plot_powerlaw_fit": [5, 8], "popul": 2, "posit": 8, "potenti": [3, 6], "power": [2, 7], "powerlaw": [3, 7, 8], "pp": [1, 2, 3], "preferenti": [2, 3], "print": [1, 8], "prob": [2, 3], "probabl": [2, 3, 6, 7], "progress": 3, "properti": [1, 2, 3, 6, 8], "proport": 3, "provid": 5, "pseed": 1, "python": 5, "r": [2, 3], "random": [1, 2, 3, 6], "random_se": 1, "randomedg": [0, 1, 5], "randomli": 2, "randomneighbor": [0, 1, 5], "randomnod": [0, 1, 5], "rang": 3, "rank": [1, 2, 3, 5, 7, 8], "recommend": 2, "regular": [3, 6], "renyi": 2, "replac": 2, "report": [2, 3], "repres": [2, 3, 6, 7, 8], "represent": 8, "reserv": 8, "reset": 8, "reset_styl": [5, 8], "respect": 1, "rev": 3, "ribeiro": 1, "right": 8, "same": [7, 8], "sampl": [0, 2, 5], "save": 8, "savefig": 8, "scale": [2, 3, 8], "scatter": 8, "scienc": [2, 3], "scientif": [2, 3], "search": 5, "second": [6, 8], "see": [2, 7], "seed": [1, 2, 3, 6], "select": [2, 3, 6], "self": 1, "sent": 8, "serif": 8, "set": [2, 3, 5, 6, 7, 8], "set_homophily_major": [5, 6], "set_homophily_minor": [5, 6], "set_paper_styl": [5, 8], "set_triadic_closur": [5, 6], "shape": 8, "share": 8, "share_po": 8, "sharei": 8, "sharex": 8, "should": [1, 3, 6], "show": [2, 3, 6, 8], "similar": [3, 6], "similarli": 3, "similitud": 7, "singer": [2, 3], "size": [6, 8], "skew": 7, "smaller": 3, "smooth": 8, "social": [1, 2, 3, 5], "solid": 8, "solut": 3, "sourc": [2, 3, 6], "space": 8, "special": [2, 3, 6], "special_target": [2, 3, 6], "specifi": 3, "squar": 8, "stat": 7, "static": 3, "statist": 5, "still": 3, "store": 1, "str": [1, 2, 3, 6, 7, 8], "strohmaier": [2, 3], "studi": 5, "style": 8, "subgraph": 1, "subplot": 8, "subplots_adjust": 8, "sum": 8, "summari": 1, "suptil": 8, "suptitl": 8, "taken": 2, "target": [2, 3, 6], "target_list": 3, "tc": [3, 6], "tc_uniform": 3, "tch": [3, 4, 5], "thi": [1, 2, 3, 6, 8], "threshold": 7, "titl": 8, "todo": 3, "top": [7, 8], "total": 7, "train": 1, "tri": 1, "triad": 3, "triadic": [3, 6], "triadicclosur": [3, 5, 6], "true": [3, 7, 8], "tunabl": 3, "tupl": [2, 3, 6, 7, 8], "two": [6, 7], "type": [7, 8], "under": [7, 8], "undigraph": [3, 4, 5], "undirect": [4, 5, 6], "uniform": 3, "uniformli": 3, "union": [2, 6, 7, 8], "updat": 6, "upper": 8, "us": [2, 3, 7, 8], "valid": [2, 3, 6], "validate_paramet": [2, 3, 5, 6], "valu": [2, 3, 6, 7, 8], "vari": 3, "verbos": 8, "version": 2, "vertic": 8, "via": [2, 3], "visual": 5, "viz": 8, "vline_fnc": 8, "vol": 1, "wagner": [2, 3], "we": 1, "when": 6, "where": [2, 3], "whether": [3, 7], "which": [2, 7], "while": 2, "white": 8, "whole": 8, "width": 8, "within": [2, 6], "work": 3, "wspace": 8, "x": [7, 8], "xlabel": 8, "xlim": 8, "xmax": 7, "xmin": 7, "y": [7, 8], "yang": 1, "yang2017": 1, "yet": [3, 6], "ylabel": 8, "ylim": 8}, "titles": ["Algorithms", "Sampling", "Directed Graphs", "Undirected Graphs", "Graphs", "Network Inequality", "Mechanisms", "Statistics", "Visualization"], "titleterms": {"algorithm": 0, "also": 3, "content": [0, 4, 5], "direct": 2, "graph": [2, 3, 4], "indic": 5, "inequ": 5, "mechan": 6, "network": 5, "note": [1, 2, 3, 6, 7], "paramet": [1, 2, 3, 6, 7, 8], "refer": [1, 2, 3, 7], "return": [2, 3, 6, 7], "sampl": 1, "see": 3, "statist": 7, "tabl": 5, "undirect": 3, "visual": 8}})