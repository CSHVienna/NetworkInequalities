Search.setIndex({"docnames": ["extensions/events", "extensions/filters", "extensions/index", "extensions/mechanisms", "extensions/models", "graphs", "index", "models/directed", "models/index", "models/undirected", "node_vectors/index", "references", "statistics", "utilities", "visualizations"], "filenames": ["extensions/events.rst", "extensions/filters.rst", "extensions/index.rst", "extensions/mechanisms.rst", "extensions/models.rst", "graphs.rst", "index.rst", "models/directed.rst", "models/index.rst", "models/undirected.rst", "node_vectors/index.rst", "references.rst", "statistics.rst", "utilities.rst", "visualizations.rst"], "titles": ["Event Handling", "Filters", "Extending NetIn", "Link Formation Mechanisms (LFM)", "Model", "Graphs", "Network Inequality", "Directed Graph Models", "Models", "Undirected Graph Models", "Node vectors", "References", "Statistics", "Utility Functions", "Visualization"], "terms": {"sever": [0, 2], "other": [0, 1, 3, 4, 5, 9, 10], "class": [0, 1, 2, 3, 4, 5, 6, 7, 9, 10, 12, 13, 14], "implement": [0, 2, 3, 4, 5, 6, 7, 9, 10, 11], "hasev": [0, 2], "interfac": [0, 2, 5, 10], "In": [0, 2], "case": [0, 2, 4, 7, 9], "thei": [0, 4, 6], "should": [0, 4, 5, 6, 7, 9, 10, 11], "provid": [0, 2, 3, 4, 5, 6, 7, 9, 10], "list": [0, 4, 5, 7, 9, 10, 12, 14], "contain": [0, 4, 5, 6, 9, 12], "If": [0, 3, 4, 5, 6, 7, 9, 10, 12, 14], "you": [0, 2, 4, 6, 7, 9], "wish": 0, "inject": [0, 2, 5, 6, 7, 9], "your": [0, 2, 6], "own": [0, 2, 6], "code": [0, 2, 5, 6, 7, 9], "check": [0, 3, 4, 5, 7, 9], "register_event_handl": [0, 5, 7, 9], "As": 0, "an": [0, 3, 4, 5, 7, 9, 10, 13], "exampl": 0, "consid": [0, 1], "shorten": 0, "simulationtim": [0, 13], "_start_tim": 0, "float": [0, 3, 4, 7, 9, 10, 12, 13, 14], "start": [0, 4, 7, 9], "time": [0, 7, 13], "option": [0, 3, 4, 5, 7, 9, 10], "none": [0, 4, 5, 7, 9, 10, 12, 14], "final": 0, "measur": [0, 12, 13], "def": 0, "__init__": 0, "self": [0, 1, 4, 5], "model": [0, 2, 6, 13, 14], "timer": 0, "simul": [0, 2, 4, 6, 7, 9, 13], "simulation_start": [0, 4, 7, 9], "end": [0, 4, 7, 9], "simulation_end": [0, 4, 7, 9], "_end_tim": 0, "set": [0, 4, 5, 9, 10, 12, 14], "comput": [0, 3, 4, 7, 9, 12], "run": [0, 4, 6, 7, 9, 13], "thi": [0, 2, 3, 4, 5, 7, 9, 10, 14], "regist": [0, 5, 7, 9], "two": [0, 5, 10, 12], "function": [0, 2, 4, 5, 6, 7, 9, 10, 14], "when": [0, 3, 4, 5, 7, 9], "method": [0, 2, 4, 5, 6], "i": [0, 1, 3, 4, 5, 6, 7, 9, 12, 14], "call": [0, 4, 5, 7, 9], "store": [0, 5], "onc": 0, "take": [0, 5], "again": 0, "subtract": 0, "after": [0, 4, 5], "attribut": [0, 4, 5, 6, 11, 12], "runtim": [0, 2], "netin": [0, 1, 3, 4, 5, 6, 7, 9, 10, 12, 13, 14], "util": [0, 6], "valu": [0, 1, 3, 4, 5, 9, 10, 12, 14], "specifi": [0, 5, 7, 9], "ar": [0, 1, 2, 3, 4, 5, 6, 7, 9, 12, 14], "trigger": [0, 4, 5, 7, 9], "action": 0, "occur": 0, "link_add_aft": [0, 5], "edg": [0, 4, 5, 6, 9, 11, 12, 14], "ad": [0, 4, 5, 9], "graph": [0, 1, 3, 4, 6, 8, 10, 12, 14], "link_add_befor": [0, 5], "befor": [0, 5], "termin": 0, "target_selection_glob": 0, "target": [0, 1, 2, 3, 4, 5, 7, 9], "node": [0, 1, 2, 3, 4, 5, 6, 7, 9, 12, 14], "patchmodel": [0, 6, 8, 9], "chosen": [0, 2, 4, 9], "global": [0, 9], "target_selection_loc": 0, "local": [0, 9], "arg": [0, 4, 5, 7, 9, 10], "kwarg": [0, 4, 5, 7, 9, 10, 12, 14], "overwritten": [0, 4, 5], "us": [0, 1, 2, 3, 5, 7, 9, 10, 12, 14], "callabl": [0, 5, 7, 9, 14], "ani": [0, 4, 5, 7, 9, 10], "new": [0, 4, 5, 7, 9], "callback": [0, 5, 7, 9], "given": [0, 5, 7, 9, 10, 12, 14], "can": [0, 2, 5, 6, 7, 9, 10], "which": [0, 2, 3, 4, 5, 7, 9, 12], "execut": [0, 5, 7, 9, 13], "respect": [0, 4, 5, 7, 9], "paramet": [0, 1, 3, 4, 5, 7, 9, 10, 12, 13, 14], "The": [0, 1, 2, 3, 4, 5, 7, 9, 10, 12, 13, 14], "remove_event_handl": [0, 5, 7, 9], "de": [0, 5, 7, 9], "handler": [0, 5, 7, 9, 14], "onli": [0, 2, 5, 7, 9, 14], "specif": [0, 2, 4, 5, 7, 9], "remov": [0, 5, 7, 9], "otherwis": [0, 1, 4, 5, 7, 9, 14], "all": [0, 1, 3, 4, 5, 7, 9, 12, 14], "delet": [0, 5, 7, 9], "from": [0, 3, 4, 5, 6, 7, 9, 10, 11, 12, 14], "default": [0, 3, 4, 5, 7, 9, 10, 12, 14], "ones": [0, 5, 7, 9], "trigger_ev": [0, 5, 7, 9], "verbos": [1, 14], "bool": [1, 3, 5, 12, 14], "fals": [1, 5, 12, 14], "attr": [1, 5, 9], "base": [1, 2, 3, 4, 6, 7, 9, 11, 12], "abstract": [1, 2, 4], "get_target_mask": 1, "sourc": [1, 3, 4, 5, 7, 9], "int": [1, 3, 4, 5, 7, 9, 10, 12, 14], "nodevector": [1, 3, 5, 6, 10], "return": [1, 3, 4, 5, 6, 7, 9, 10, 12, 13], "mask": [1, 10], "A": [1, 4, 5, 6, 7, 9, 11, 14], "must": [1, 3, 5, 10, 12], "0": [1, 9, 10, 12, 14], "1": [1, 3, 4, 6, 7, 9, 10, 11, 12, 14], "nodoublelink": [1, 2], "n": [1, 3, 4, 7, 9, 10], "prevent": 1, "doubl": [1, 4], "link": [1, 2, 4, 5, 7, 9], "number": [1, 3, 4, 5, 7, 9, 10, 12, 14], "updat": [1, 3, 4, 9], "activ": [1, 4, 7], "alreadi": [1, 4, 5], "noselflink": [1, 2], "activenod": [1, 2], "digraph": [1, 3, 4, 5, 6, 7, 12], "ha": [1, 9, 13], "least": 1, "one": [1, 4, 12, 14], "outgo": 1, "_": [1, 4, 7], "unus": 1, "packag": [2, 6], "multipl": [2, 14], "its": [2, 10], "event": [2, 4, 5, 7, 9], "handl": [2, 4, 5, 7, 9], "altern": 2, "exist": [2, 3, 5, 6, 7, 9], "structur": [2, 5], "facilit": 2, "chang": 2, "detail": [2, 4, 7, 9, 12], "filter": [2, 4, 7, 9], "linkformationmechan": [2, 3, 4], "describ": 2, "how": [2, 4, 9], "dure": [2, 6], "format": [2, 4, 6, 7, 9, 11], "mechan": [2, 4, 7, 9], "lfm": 2, "uniform": [2, 3, 9], "preferentialattach": [2, 3], "indegreepreferentialattach": [2, 3], "homophili": [2, 3, 6, 7, 9, 11], "triadicclosur": [2, 3], "both": [2, 9], "custom": [2, 5, 6], "e": [2, 6, 12, 14], "g": [2, 6, 12, 14], "reus": 2, "logic": [2, 4, 7], "some": 2, "have": [2, 3], "reimplement": 2, "For": [2, 5, 6, 7, 9, 10], "purpos": 2, "defin": [2, 4, 5, 6, 9], "vari": 2, "level": 2, "binaryclassmodel": [2, 4], "undirectedmodel": [2, 4], "directedmodel": [2, 4, 7], "link_formation_mechan": 3, "get_target_prob": 3, "probabl": [3, 4, 7, 9, 12], "connect": [3, 4, 7, 9], "non": 3, "neg": 3, "sum": [3, 10, 14], "note": [3, 4, 5, 7, 9, 12], "distribut": [3, 12, 14], "zero": 3, "same": [3, 5, 12, 14], "form": [3, 5, 6, 9], "init_degre": 3, "true": [3, 5, 12, 14], "preferenti": [3, 7, 9], "attach": [3, 7, 9], "total": [3, 4, 12], "object": [3, 4, 5], "intern": 3, "degre": [3, 5, 7, 9, 12, 14], "state": 3, "whether": [3, 5, 12], "initi": [3, 4, 7, 9, 10], "initialize_degree_arrai": 3, "arrai": [3, 4, 10, 12], "load": [3, 4], "need": 3, "node_class_valu": [3, 12], "categoricalnodevector": [3, 5, 6, 10, 12], "ndarrai": [3, 4, 7, 9, 10, 12], "determin": [3, 12], "group": [3, 4, 6, 7, 9, 12, 14], "membership": 3, "account": 3, "singl": [3, 4], "per": [3, 4, 9, 14], "arbitrari": [3, 10], "assign": [3, 6, 7, 9, 10], "each": [3, 4, 5, 6, 7, 12, 14], "dimens": 3, "n_node": 3, "also": [3, 6], "infer": [3, 6, 12], "union": [3, 4, 7, 9, 12, 14], "np": [3, 4, 5, 7, 9, 10, 12], "": [3, 10, 14], "out": [3, 12], "n_class_valu": 3, "matrix": 3, "symmetr": 3, "shape": [3, 14], "moreov": 3, "row": [3, 12], "up": 3, "triadic": [3, 9], "closur": [3, 9], "friend": 3, "while": [3, 5], "keep": 3, "track": 3, "seed": [4, 7, 9], "gener": [4, 5, 7, 9, 10], "grow": 4, "network": [4, 7, 9, 11, 12], "inherit": 4, "evok": [4, 7, 9], "short": [4, 7, 9], "shorthand": [4, 7, 9], "name": [4, 5, 7, 9, 10, 12, 14], "_initialize_empty_graph": 4, "empti": 4, "actual": 4, "see": [4, 7, 9, 12], "_simul": [4, 7, 9], "order": [4, 5, 7, 9], "_initialize_filt": 4, "loop": 4, "_initialize_graph": 4, "popul": 4, "_initialize_lfm": 4, "_initialize_node_class": 4, "_populate_initial_graph": 4, "_sample_target_nod": 4, "target_prob": 4, "pick": 4, "_set_se": 4, "random": [4, 6, 7, 9, 10, 11], "compute_target_prob": [4, 7, 9], "appli": [4, 6, 11], "avoid": 4, "numpi": [4, 10, 12], "get_metadata": [4, 5, 7, 9, 10], "d_meta_data": [4, 5, 7, 9, 10], "dict": [4, 5, 7, 9, 10, 12, 14], "str": [4, 5, 7, 9, 10, 12, 14], "metadata": [4, 5, 7, 9, 10, 12, 14], "add": [4, 5, 7, 9], "dictionari": [4, 5, 9], "initialize_simul": [4, 7, 9], "preload": [4, 7, 9], "preload_graph": [4, 7, 9], "want": [4, 6, 7, 9], "extend": [4, 6, 7, 9], "follow": [4, 5, 6, 7, 9], "f_m": [4, 7, 9, 10, 12], "binari": [4, 10, 12], "minor": [4, 6, 7, 9, 10, 11, 12, 14], "major": [4, 6, 7, 9, 10, 12], "fraction": [4, 7, 9, 10, 12, 14], "present": 4, "instanc": [4, 6, 9, 10], "pre": 4, "kept": 4, "vector": [4, 6], "creat": [4, 5, 6, 9, 10], "m": [4, 6, 9, 10, 11], "undirect": [4, 6, 8], "barabasialbert1999": [4, 6, 9, 11], "previous": 4, "depend": [4, 9], "subclass": 4, "pahmodel": [4, 6, 8, 9], "choic": 4, "d": [4, 7], "plo_m": [4, 7], "growth": 4, "select": [4, 9], "parameter": [4, 9], "power": [4, 7, 12], "law": [4, 7, 12], "expon": [4, 7], "until": 4, "densiti": [4, 7, 12], "reach": [4, 7], "wai": 4, "espin": [4, 6, 7, 11, 12], "noboa2022": [4, 6, 7, 11, 12], "direct": [4, 5, 6, 8], "It": [4, 5, 6, 7, 10, 14], "includ": [4, 5, 7, 10, 12, 14], "current": [4, 7, 10], "support": [4, 5, 7], "represent": [5, 14], "allow": [5, 10, 14], "simpl": 5, "manipul": 5, "import": 5, "export": 5, "popular": 5, "librari": 5, "add_edg": 5, "add_nod": 5, "copi": [5, 10], "neighbor": [5, 9], "calcul": [5, 12], "tupl": [5, 12, 14], "yield": 5, "classmethod": [5, 10], "from_nxgraph": 5, "node_attributes_nam": 5, "sort_node_label": 5, "networkx": 5, "map": 5, "label": [5, 10, 12, 14], "identifi": 5, "integ": 5, "indic": [5, 12], "translat": 5, "where": 5, "v_i": 5, "index": [5, 6], "nx": [5, 12], "convert": 5, "element": 5, "retriev": 5, "get_node_attribut": [5, 12], "sort": 5, "ascend": 5, "nx_graph": 5, "full": 5, "rang": 5, "ident": 5, "arang": 5, "len": 5, "descript": [5, 10], "get_node_class": 5, "get": [5, 10, 12, 14], "origin": 5, "has_edg": 5, "between": [5, 12, 14], "has_node_class": 5, "is_direct": 5, "alwai": 5, "number_of_edg": 5, "number_of_nod": 5, "set_node_class": 5, "node_vector": 5, "kei": [5, 9], "under": [5, 12, 14], "to_nxgraph": 5, "repres": [5, 10, 12, 14], "becaus": 5, "mai": 5, "reason": 5, "access": 5, "node_label": 5, "python": 6, "analysi": 6, "social": [6, 11], "studi": 6, "rank": [6, 11, 12, 14], "them": 6, "dhmodel": [6, 7, 8], "dpamodel": [6, 7, 8], "dpahmodel": [6, 7, 8], "barabasialbertmodel": [6, 8, 9], "homophilymodel": [6, 8, 9], "compoundlfm": [6, 8, 9], "typic": 6, "most": 6, "binaryclassnodevector": [6, 10, 12], "besid": 6, "offer": 6, "analyz": 6, "term": 6, "variou": 6, "exhibit": 6, "statist": 6, "highli": 6, "visual": 6, "result": [6, 10], "modul": 6, "search": 6, "page": 6, "l": [6, 11], "barabasi": [6, 11], "r": [6, 11], "albert": [6, 11], "emerg": [6, 11], "scale": [6, 11, 14], "scienc": [6, 11], "286": [6, 11], "pp": [6, 11], "509": [6, 11], "512": [6, 11], "1999": [6, 11], "esp\u00edn": [6, 11], "noboa": [6, 11], "c": [6, 9, 11], "wagner": [6, 11], "strohmaier": [6, 11], "f": [6, 11], "karimi": [6, 11], "recommend": [6, 11], "algorithm": [6, 11], "scientif": [6, 11], "report": [6, 11], "12": [6, 11], "14": [6, 11], "2022": [6, 11], "noboa2017": [6, 11], "lemmerich": [6, 11], "p": [6, 9, 11], "singer": [6, 11], "janu": [6, 11], "hypothesi": [6, 11], "driven": [6, 11], "bayesian": [6, 11], "approach": [6, 11], "understand": [6, 11], "multigraph": [6, 11], "2": [6, 9, 11], "20": [6, 11], "karimi2018": [6, 9, 11], "g\u00e9noi": [6, 11], "influenc": [6, 11], "8": [6, 9, 11], "11077": [6, 11], "2018": [6, 11], "gini": [6, 11, 12, 14], "coeffici": [6, 11, 12, 14], "yang2017": [6, 11], "j": [6, 11], "yang": [6, 11], "b": [6, 11], "ribeiro": [6, 11], "nevil": [6, 11], "we": [6, 11], "Be": [6, 11], "confid": [6, 11], "peer": [6, 11], "effect": [6, 9, 11], "estim": [6, 11], "crawl": [6, 11], "icwsm": [6, 11], "vol": [6, 11], "11": [6, 11], "No": [6, 11], "708": [6, 11], "711": [6, 11], "2017": [6, 11], "h_mm": [7, 9], "join": [7, 9], "proport": [7, 9], "differ": 7, "dh": 7, "twoclasshomophili": 7, "dpa": 7, "dpah": 7, "ba": 9, "referenti": 9, "ttachment": 9, "h": 9, "omophili": 9, "pah": 9, "product": 9, "p_tc": 9, "lfm_local": 9, "lfm_global": 9, "lfm_param": 9, "combin": 9, "t": 9, "riadic": 9, "losur": 9, "either": 9, "avail": 9, "mean": [9, 12, 14], "among": [9, 14], "With": 9, "complementari": [9, 12], "randomli": 9, "3": [9, 12], "choos": 9, "5": 9, "neutral": 9, "addit": [9, 12, 14], "desir": 9, "_description_": 9, "patch": 9, "compound": 9, "uniformli": 9, "dtype": 10, "type": [10, 12, 14], "fill_valu": 10, "wrapper": 10, "doe": 10, "necessarili": 10, "correspond": 10, "usag": 10, "data": [10, 12, 14], "valid": 10, "append_oth": 10, "append": 10, "anoth": 10, "from_ndarrai": 10, "get_valu": 10, "set_valu": 10, "forward": 10, "val": 10, "shortcut": 10, "n_valu": 10, "class_label": [10, 12], "categor": 10, "possibl": 10, "size": [10, 14], "match": 10, "fill": [10, 14], "get_class_valu": 10, "instead": 10, "class_attribut": [10, 12], "from_fract": 10, "rng": 10, "get_majority_mask": 10, "get_minority_mask": 10, "get_n_major": 10, "get_n_minor": 10, "inequ": [11, 12, 14], "stat": 12, "fit_power_law": 12, "discret": 12, "xmin": 12, "xmax": 12, "fit": [12, 14], "minimum": 12, "maximum": 12, "argument": [12, 14], "pass": [12, 13, 14], "powerlaw": [12, 14], "constructor": 12, "fit_powerlaw_group": 12, "metric": 12, "string": 12, "boolean": 12, "belong": 12, "get_ccdf": 12, "df": 12, "panda": [12, 14], "core": 12, "frame": 12, "datafram": [12, 14], "x": [12, 14], "cumul": 12, "ccdf": [12, 14], "input": 12, "pd": [12, 14], "column": [12, 14], "amount": [12, 14], "normal": [12, 14], "hold": 12, "y": [12, 14], "get_cdf": 12, "cdf": [12, 14], "here": 12, "get_dispar": 12, "dispar": [12, 14], "get_fraction_of_minor": 12, "top": [12, 14], "k": [12, 14], "get_gini_coeffici": 12, "get_pdf": 12, "compute_node_stat": 12, "properti": [12, 14], "get_average_degre": 12, "averag": [12, 14], "get_edge_type_count": 12, "counter": 12, "count": 12, "assum": 12, "get_min_degre": 12, "get_minority_fract": 12, "get_node_metadata_as_datafram": 12, "include_graph_metadata": 12, "n_job": 12, "everi": 12, "etc": 12, "parallel": 12, "job": 12, "get_similitud": 12, "similitud": 12, "get_fraction_of_minority_in_rank": 12, "get_gini_in_rank": 12, "get_ranking_inequ": 12, "entir": 12, "op": 12, "100": 12, "get_ranking_inequality_class": 12, "gini_glob": 12, "cut": [12, 14], "6": 12, "equal": 12, "moder": 12, "skew": 12, "By": 12, "me": 12, "error": [12, 14], "distanc": 12, "get_ranking_inequity_class": 12, "beta": [12, 14], "threshold": 12, "fair": [12, 14], "over": [12, 14], "more": 12, "05": 12, "get_tim": 13, "second": [13, 14], "rais": 13, "assertionerror": 13, "yet": 13, "viz": 14, "plot_dispar": 14, "col_nam": 14, "fn": 14, "plot": 14, "file": 14, "save": 14, "plot_distribut": 14, "get_x_y_from_df_fnc": 14, "filenam": 14, "figur": 14, "nc": 14, "show": 14, "grid": 14, "cell_siz": 14, "cell": 14, "inch": 14, "first": 14, "width": 14, "height": 14, "scatter": 14, "sharex": 14, "axi": 14, "share": 14, "subplot": 14, "sharei": 14, "ylabel": 14, "xlabel": 14, "xlim": 14, "ylim": 14, "limit": 14, "hue": 14, "common_norm": 14, "log_scal": 14, "log": 14, "hline_fnc": 14, "horizont": 14, "line": 14, "vline_fnc": 14, "vertic": 14, "suptitl": 14, "titl": 14, "whole": 14, "gini_fnc": 14, "me_fnc": 14, "smooth": 14, "area": 14, "class_label_legend": 14, "legend": 14, "And": 14, "sent": 14, "ax": 14, "matplotlib": 14, "plot_fraction_of_minor": 14, "plot_gini_coeffici": 14, "plot_graph": 14, "share_po": 14, "ignore_singleton": 14, "posit": 14, "node_s": 14, "node_shap": 14, "o": 14, "circl": 14, "squar": 14, "edge_width": 14, "edge_styl": 14, "style": 14, "solid": 14, "dash": 14, "edge_arrow": 14, "arrow": 14, "arrow_styl": 14, "arrow_s": 14, "subplots_adjust": 14, "savefig": 14, "plot_powerlaw_fit": 14, "kind": 14, "empir": 14, "One": 14, "pdf": 14, "print": 14, "wspace": 14, "reserv": 14, "blank": 14, "space": 14, "express": 14, "hspace": 14, "white": 14, "suptil": 14, "color": 14, "bbox": 14, "bound": 14, "box": 14, "four": 14, "left": 14, "bottom": 14, "right": 14, "coordin": 14, "loc": 14, "locat": 14, "best": 14, "upper": 14, "lower": 14, "center": 14, "reset_styl": 14, "reset": 14, "set_paper_styl": 14, "font_scal": 14, "paper": 14, "font": 14, "famili": 14, "serif": 14, "adjust": 14, "factor": 14}, "objects": {"": [[6, 0, 0, "-", "netin"]], "netin.filters": [[1, 1, 1, "", "ActiveNodes"], [1, 1, 1, "", "Filter"], [1, 1, 1, "", "NoDoubleLinks"], [1, 1, 1, "", "NoSelfLinks"]], "netin.filters.ActiveNodes": [[1, 2, 1, "", "get_target_mask"]], "netin.filters.Filter": [[1, 2, 1, "", "get_target_mask"]], "netin.filters.NoDoubleLinks": [[1, 2, 1, "", "get_target_mask"]], "netin.filters.NoSelfLinks": [[1, 2, 1, "", "get_target_mask"]], "netin.graphs": [[10, 1, 1, "", "BinaryClassNodeVector"], [10, 1, 1, "", "CategoricalNodeVector"], [5, 1, 1, "", "DiGraph"], [5, 1, 1, "", "Graph"], [10, 1, 1, "", "NodeVector"]], "netin.graphs.BinaryClassNodeVector": [[10, 2, 1, "", "append_other"], [10, 2, 1, "", "copy"], [10, 2, 1, "", "from_fraction"], [10, 2, 1, "", "from_ndarray"], [10, 2, 1, "", "get_class_values"], [10, 2, 1, "", "get_majority_mask"], [10, 2, 1, "", "get_metadata"], [10, 2, 1, "", "get_minority_mask"], [10, 2, 1, "", "get_n_majority"], [10, 2, 1, "", "get_n_minority"], [10, 2, 1, "", "get_values"], [10, 2, 1, "", "set_values"], [10, 2, 1, "", "sum"], [10, 2, 1, "", "vals"]], "netin.graphs.CategoricalNodeVector": [[10, 2, 1, "", "append_other"], [10, 2, 1, "", "copy"], [10, 2, 1, "", "from_ndarray"], [10, 2, 1, "", "get_class_values"], [10, 2, 1, "", "get_metadata"], [10, 2, 1, "", "get_values"], [10, 2, 1, "", "set_values"], [10, 2, 1, "", "sum"], [10, 2, 1, "", "vals"]], "netin.graphs.DiGraph": [[5, 3, 1, "", "EVENTS"], [5, 2, 1, "", "add_edge"], [5, 2, 1, "", "add_node"], [5, 2, 1, "", "copy"], [5, 2, 1, "", "degree"], [5, 2, 1, "", "degrees"], [5, 2, 1, "", "edges"], [5, 2, 1, "", "from_nxgraph"], [5, 2, 1, "", "get_metadata"], [5, 2, 1, "", "get_node_class"], [5, 2, 1, "", "get_node_classes"], [5, 2, 1, "", "has_edge"], [5, 2, 1, "", "has_node_class"], [5, 2, 1, "", "is_directed"], [5, 2, 1, "", "neighbors"], [5, 2, 1, "", "nodes"], [5, 2, 1, "", "number_of_edges"], [5, 2, 1, "", "number_of_nodes"], [5, 2, 1, "", "register_event_handler"], [5, 2, 1, "", "remove_event_handler"], [5, 2, 1, "", "set_node_class"], [5, 2, 1, "", "to_nxgraph"], [5, 2, 1, "", "trigger_event"]], "netin.graphs.Graph": [[5, 3, 1, "", "EVENTS"], [5, 2, 1, "", "add_edge"], [5, 2, 1, "", "add_node"], [5, 2, 1, "", "copy"], [5, 2, 1, "", "degree"], [5, 2, 1, "", "degrees"], [5, 2, 1, "", "edges"], [5, 2, 1, "", "from_nxgraph"], [5, 2, 1, "", "get_metadata"], [5, 2, 1, "", "get_node_class"], [5, 2, 1, "", "get_node_classes"], [5, 2, 1, "", "has_edge"], [5, 2, 1, "", "has_node_class"], [5, 2, 1, "", "is_directed"], [5, 2, 1, "", "neighbors"], [5, 2, 1, "", "nodes"], [5, 2, 1, "", "number_of_edges"], [5, 2, 1, "", "number_of_nodes"], [5, 2, 1, "", "register_event_handler"], [5, 2, 1, "", "remove_event_handler"], [5, 2, 1, "", "set_node_class"], [5, 2, 1, "", "to_nxgraph"], [5, 2, 1, "", "trigger_event"]], "netin.graphs.NodeVector": [[10, 2, 1, "", "append_other"], [10, 2, 1, "", "copy"], [10, 2, 1, "", "from_ndarray"], [10, 2, 1, "", "get_metadata"], [10, 2, 1, "", "get_values"], [10, 2, 1, "", "set_values"], [10, 2, 1, "", "sum"], [10, 2, 1, "", "vals"]], "netin.link_formation_mechanisms": [[3, 1, 1, "", "Homophily"], [3, 1, 1, "", "InDegreePreferentialAttachment"], [3, 1, 1, "", "LinkFormationMechanism"], [3, 1, 1, "", "PreferentialAttachment"], [3, 1, 1, "", "TriadicClosure"], [3, 1, 1, "", "Uniform"]], "netin.link_formation_mechanisms.InDegreePreferentialAttachment": [[3, 2, 1, "", "initialize_degree_array"]], "netin.link_formation_mechanisms.LinkFormationMechanism": [[3, 2, 1, "", "get_target_probabilities"]], "netin.link_formation_mechanisms.PreferentialAttachment": [[3, 2, 1, "", "initialize_degree_array"]], "netin.models": [[9, 1, 1, "", "BarabasiAlbertModel"], [4, 1, 1, "", "BinaryClassModel"], [9, 1, 1, "", "CompoundLFM"], [7, 1, 1, "", "DHModel"], [7, 1, 1, "", "DPAHModel"], [7, 1, 1, "", "DPAModel"], [4, 1, 1, "", "DirectedModel"], [9, 1, 1, "", "HomophilyModel"], [4, 1, 1, "", "Model"], [9, 1, 1, "", "PAHModel"], [9, 1, 1, "", "PATCHModel"], [4, 1, 1, "", "UndirectedModel"]], "netin.models.BarabasiAlbertModel": [[9, 3, 1, "", "EVENTS"], [9, 3, 1, "", "SHORT"], [9, 2, 1, "", "compute_target_probabilities"], [9, 2, 1, "", "get_metadata"], [9, 2, 1, "", "initialize_simulation"], [9, 2, 1, "", "preload_graph"], [9, 2, 1, "", "register_event_handler"], [9, 2, 1, "", "remove_event_handler"], [9, 2, 1, "", "simulate"], [9, 2, 1, "", "trigger_event"]], "netin.models.BinaryClassModel": [[4, 2, 1, "", "_initialize_node_classes"]], "netin.models.CompoundLFM": [[9, 3, 1, "", "HOMOPHILY"], [9, 3, 1, "", "PAH"], [9, 3, 1, "", "UNIFORM"]], "netin.models.DHModel": [[7, 3, 1, "", "EVENTS"], [7, 3, 1, "", "SHORT"], [7, 2, 1, "", "compute_target_probabilities"], [7, 2, 1, "", "get_metadata"], [7, 2, 1, "", "initialize_simulation"], [7, 2, 1, "", "preload_graph"], [7, 2, 1, "", "register_event_handler"], [7, 2, 1, "", "remove_event_handler"], [7, 2, 1, "", "simulate"], [7, 2, 1, "", "trigger_event"]], "netin.models.DPAHModel": [[7, 3, 1, "", "EVENTS"], [7, 3, 1, "", "SHORT"], [7, 2, 1, "", "compute_target_probabilities"], [7, 2, 1, "", "get_metadata"], [7, 2, 1, "", "initialize_simulation"], [7, 2, 1, "", "preload_graph"], [7, 2, 1, "", "register_event_handler"], [7, 2, 1, "", "remove_event_handler"], [7, 2, 1, "", "simulate"], [7, 2, 1, "", "trigger_event"]], "netin.models.DPAModel": [[7, 3, 1, "", "EVENTS"], [7, 3, 1, "", "SHORT"], [7, 2, 1, "", "compute_target_probabilities"], [7, 2, 1, "", "get_metadata"], [7, 2, 1, "", "initialize_simulation"], [7, 2, 1, "", "preload_graph"], [7, 2, 1, "", "register_event_handler"], [7, 2, 1, "", "remove_event_handler"], [7, 2, 1, "", "simulate"], [7, 2, 1, "", "trigger_event"]], "netin.models.DirectedModel": [[4, 3, 1, "", "SHORT"], [4, 2, 1, "", "_initialize_empty_graph"], [4, 2, 1, "", "_initialize_filters"], [4, 2, 1, "", "_initialize_lfms"], [4, 2, 1, "", "_populate_initial_graph"], [4, 2, 1, "", "_simulate"], [4, 2, 1, "", "get_metadata"], [4, 2, 1, "", "preload_graph"]], "netin.models.HomophilyModel": [[9, 3, 1, "", "EVENTS"], [9, 3, 1, "", "SHORT"], [9, 2, 1, "", "compute_target_probabilities"], [9, 2, 1, "", "get_metadata"], [9, 2, 1, "", "initialize_simulation"], [9, 2, 1, "", "preload_graph"], [9, 2, 1, "", "register_event_handler"], [9, 2, 1, "", "remove_event_handler"], [9, 2, 1, "", "simulate"], [9, 2, 1, "", "trigger_event"]], "netin.models.Model": [[4, 3, 1, "", "EVENTS"], [4, 3, 1, "", "SHORT"], [4, 2, 1, "", "_initialize_empty_graph"], [4, 2, 1, "", "_initialize_filters"], [4, 2, 1, "", "_initialize_graph"], [4, 2, 1, "", "_initialize_lfms"], [4, 2, 1, "", "_initialize_node_classes"], [4, 2, 1, "", "_populate_initial_graph"], [4, 2, 1, "", "_sample_target_node"], [4, 2, 1, "", "_set_seed"], [4, 2, 1, "", "_simulate"], [4, 2, 1, "", "compute_target_probabilities"], [4, 2, 1, "", "get_metadata"], [4, 2, 1, "", "initialize_simulation"], [4, 2, 1, "", "preload_graph"], [4, 2, 1, "", "simulate"]], "netin.models.PAHModel": [[9, 3, 1, "", "EVENTS"], [9, 3, 1, "", "SHORT"], [9, 2, 1, "", "compute_target_probabilities"], [9, 2, 1, "", "get_metadata"], [9, 2, 1, "", "initialize_simulation"], [9, 2, 1, "", "preload_graph"], [9, 2, 1, "", "register_event_handler"], [9, 2, 1, "", "remove_event_handler"], [9, 2, 1, "", "simulate"], [9, 2, 1, "", "trigger_event"]], "netin.models.PATCHModel": [[9, 3, 1, "", "EVENTS"], [9, 3, 1, "", "SHORT"], [9, 2, 1, "", "compute_target_probabilities"], [9, 2, 1, "", "get_metadata"], [9, 2, 1, "", "initialize_simulation"], [9, 2, 1, "", "preload_graph"], [9, 2, 1, "", "register_event_handler"], [9, 2, 1, "", "remove_event_handler"], [9, 2, 1, "", "simulate"], [9, 2, 1, "", "trigger_event"]], "netin.models.UndirectedModel": [[4, 3, 1, "", "SHORT"], [4, 2, 1, "", "_initialize_empty_graph"], [4, 2, 1, "", "_populate_initial_graph"], [4, 2, 1, "", "_simulate"], [4, 2, 1, "", "get_metadata"], [4, 2, 1, "", "preload_graph"]], "netin.stats": [[12, 0, 0, "-", "distributions"], [12, 0, 0, "-", "networks"], [12, 0, 0, "-", "ranking"]], "netin.stats.distributions": [[12, 4, 1, "", "fit_power_law"], [12, 4, 1, "", "fit_powerlaw_groups"], [12, 4, 1, "", "get_ccdf"], [12, 4, 1, "", "get_cdf"], [12, 4, 1, "", "get_disparity"], [12, 4, 1, "", "get_fraction_of_minority"], [12, 4, 1, "", "get_gini_coefficient"], [12, 4, 1, "", "get_pdf"]], "netin.stats.networks": [[12, 4, 1, "", "compute_node_stats"], [12, 4, 1, "", "get_average_degree"], [12, 4, 1, "", "get_average_degrees"], [12, 4, 1, "", "get_edge_type_counts"], [12, 4, 1, "", "get_min_degree"], [12, 4, 1, "", "get_minority_fraction"], [12, 4, 1, "", "get_node_attributes"], [12, 4, 1, "", "get_node_metadata_as_dataframe"], [12, 4, 1, "", "get_similitude"]], "netin.stats.ranking": [[12, 4, 1, "", "get_fraction_of_minority_in_ranking"], [12, 4, 1, "", "get_gini_in_ranking"], [12, 4, 1, "", "get_ranking_inequality"], [12, 4, 1, "", "get_ranking_inequality_class"], [12, 4, 1, "", "get_ranking_inequity"], [12, 4, 1, "", "get_ranking_inequity_class"], [12, 4, 1, "", "gini"]], "netin.utils": [[0, 1, 1, "", "Event"], [0, 1, 1, "", "HasEvents"], [13, 1, 1, "", "SimulationTimer"]], "netin.utils.Event": [[0, 3, 1, "", "LINK_ADD_AFTER"], [0, 3, 1, "", "LINK_ADD_BEFORE"], [0, 3, 1, "", "SIMULATION_END"], [0, 3, 1, "", "SIMULATION_START"], [0, 3, 1, "", "TARGET_SELECTION_GLOBAL"], [0, 3, 1, "", "TARGET_SELECTION_LOCAL"]], "netin.utils.HasEvents": [[0, 3, 1, "", "EVENTS"], [0, 2, 1, "", "register_event_handler"], [0, 2, 1, "", "remove_event_handler"], [0, 2, 1, "", "trigger_event"]], "netin.utils.SimulationTimer": [[13, 2, 1, "", "get_time"]], "netin.viz": [[14, 0, 0, "-", "handlers"]], "netin.viz.handlers": [[14, 4, 1, "", "plot_disparity"], [14, 4, 1, "", "plot_distribution"], [14, 4, 1, "", "plot_fraction_of_minority"], [14, 4, 1, "", "plot_gini_coefficient"], [14, 4, 1, "", "plot_graph"], [14, 4, 1, "", "plot_powerlaw_fit"], [14, 4, 1, "", "reset_style"], [14, 4, 1, "", "set_paper_style"]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:method", "3": "py:attribute", "4": "py:function"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "method", "Python method"], "3": ["py", "attribute", "Python attribute"], "4": ["py", "function", "Python function"]}, "titleterms": {"event": 0, "handl": 0, "filter": 1, "extend": 2, "netin": 2, "link": 3, "format": 3, "mechan": 3, "lfm": 3, "model": [4, 7, 8, 9], "graph": [5, 7, 9], "network": 6, "inequ": 6, "indic": 6, "tabl": 6, "refer": [6, 11], "direct": 7, "undirect": 9, "node": 10, "vector": 10, "statist": 12, "util": 13, "function": 13, "visual": 14}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx": 57}, "alltitles": {"Event Handling": [[0, "event-handling"]], "Filters": [[1, "filters"]], "Extending NetIn": [[2, "extending-netin"]], "Link Formation Mechanisms (LFM)": [[3, "link-formation-mechanisms-lfm"]], "Model": [[4, "model"]], "Graphs": [[5, "graphs"]], "Network Inequality": [[6, "module-netin"]], "Indices and tables": [[6, "indices-and-tables"]], "References": [[6, "references"], [11, "references"]], "Directed Graph Models": [[7, "directed-graph-models"]], "Models": [[8, "models"]], "Undirected Graph Models": [[9, "undirected-graph-models"]], "Node vectors": [[10, "node-vectors"]], "Statistics": [[12, "module-netin.stats.distributions"]], "Utility Functions": [[13, "utility-functions"]], "Visualization": [[14, "module-netin.viz.handlers"]]}, "indexentries": {"events (netin.utils.hasevents attribute)": [[0, "netin.utils.HasEvents.EVENTS"]], "event (class in netin.utils)": [[0, "netin.utils.Event"]], "hasevents (class in netin.utils)": [[0, "netin.utils.HasEvents"]], "link_add_after (netin.utils.event attribute)": [[0, "netin.utils.Event.LINK_ADD_AFTER"]], "link_add_before (netin.utils.event attribute)": [[0, "netin.utils.Event.LINK_ADD_BEFORE"]], "simulation_end (netin.utils.event attribute)": [[0, "netin.utils.Event.SIMULATION_END"]], "simulation_start (netin.utils.event attribute)": [[0, "netin.utils.Event.SIMULATION_START"]], "target_selection_global (netin.utils.event attribute)": [[0, "netin.utils.Event.TARGET_SELECTION_GLOBAL"]], "target_selection_local (netin.utils.event attribute)": [[0, "netin.utils.Event.TARGET_SELECTION_LOCAL"]], "register_event_handler() (netin.utils.hasevents method)": [[0, "netin.utils.HasEvents.register_event_handler"]], "remove_event_handler() (netin.utils.hasevents method)": [[0, "netin.utils.HasEvents.remove_event_handler"]], "trigger_event() (netin.utils.hasevents method)": [[0, "netin.utils.HasEvents.trigger_event"]], "activenodes (class in netin.filters)": [[1, "netin.filters.ActiveNodes"]], "filter (class in netin.filters)": [[1, "netin.filters.Filter"]], "nodoublelinks (class in netin.filters)": [[1, "netin.filters.NoDoubleLinks"]], "noselflinks (class in netin.filters)": [[1, "netin.filters.NoSelfLinks"]], "get_target_mask() (netin.filters.activenodes method)": [[1, "netin.filters.ActiveNodes.get_target_mask"]], "get_target_mask() (netin.filters.filter method)": [[1, "netin.filters.Filter.get_target_mask"]], "get_target_mask() (netin.filters.nodoublelinks method)": [[1, "netin.filters.NoDoubleLinks.get_target_mask"]], "get_target_mask() (netin.filters.noselflinks method)": [[1, "netin.filters.NoSelfLinks.get_target_mask"]], "homophily (class in netin.link_formation_mechanisms)": [[3, "netin.link_formation_mechanisms.Homophily"]], "indegreepreferentialattachment (class in netin.link_formation_mechanisms)": [[3, "netin.link_formation_mechanisms.InDegreePreferentialAttachment"]], "linkformationmechanism (class in netin.link_formation_mechanisms)": [[3, "netin.link_formation_mechanisms.LinkFormationMechanism"]], "preferentialattachment (class in netin.link_formation_mechanisms)": [[3, "netin.link_formation_mechanisms.PreferentialAttachment"]], "triadicclosure (class in netin.link_formation_mechanisms)": [[3, "netin.link_formation_mechanisms.TriadicClosure"]], "uniform (class in netin.link_formation_mechanisms)": [[3, "netin.link_formation_mechanisms.Uniform"]], "get_target_probabilities() (netin.link_formation_mechanisms.linkformationmechanism method)": [[3, "netin.link_formation_mechanisms.LinkFormationMechanism.get_target_probabilities"]], "initialize_degree_array() (netin.link_formation_mechanisms.indegreepreferentialattachment method)": [[3, "netin.link_formation_mechanisms.InDegreePreferentialAttachment.initialize_degree_array"]], "initialize_degree_array() (netin.link_formation_mechanisms.preferentialattachment method)": [[3, "netin.link_formation_mechanisms.PreferentialAttachment.initialize_degree_array"]], "binaryclassmodel (class in netin.models)": [[4, "netin.models.BinaryClassModel"]], "directedmodel (class in netin.models)": [[4, "netin.models.DirectedModel"]], "events (netin.models.model attribute)": [[4, "netin.models.Model.EVENTS"]], "model (class in netin.models)": [[4, "netin.models.Model"]], "short (netin.models.directedmodel attribute)": [[4, "netin.models.DirectedModel.SHORT"]], "short (netin.models.model attribute)": [[4, "netin.models.Model.SHORT"]], "short (netin.models.undirectedmodel attribute)": [[4, "netin.models.UndirectedModel.SHORT"]], "undirectedmodel (class in netin.models)": [[4, "netin.models.UndirectedModel"]], "_initialize_empty_graph() (netin.models.directedmodel method)": [[4, "netin.models.DirectedModel._initialize_empty_graph"]], "_initialize_empty_graph() (netin.models.model method)": [[4, "netin.models.Model._initialize_empty_graph"]], "_initialize_empty_graph() (netin.models.undirectedmodel method)": [[4, "netin.models.UndirectedModel._initialize_empty_graph"]], "_initialize_filters() (netin.models.directedmodel method)": [[4, "netin.models.DirectedModel._initialize_filters"]], "_initialize_filters() (netin.models.model method)": [[4, "netin.models.Model._initialize_filters"]], "_initialize_graph() (netin.models.model method)": [[4, "netin.models.Model._initialize_graph"]], "_initialize_lfms() (netin.models.directedmodel method)": [[4, "netin.models.DirectedModel._initialize_lfms"]], "_initialize_lfms() (netin.models.model method)": [[4, "netin.models.Model._initialize_lfms"]], "_initialize_node_classes() (netin.models.binaryclassmodel method)": [[4, "netin.models.BinaryClassModel._initialize_node_classes"]], "_initialize_node_classes() (netin.models.model method)": [[4, "netin.models.Model._initialize_node_classes"]], "_populate_initial_graph() (netin.models.directedmodel method)": [[4, "netin.models.DirectedModel._populate_initial_graph"]], "_populate_initial_graph() (netin.models.model method)": [[4, "netin.models.Model._populate_initial_graph"]], "_populate_initial_graph() (netin.models.undirectedmodel method)": [[4, "netin.models.UndirectedModel._populate_initial_graph"]], "_sample_target_node() (netin.models.model method)": [[4, "netin.models.Model._sample_target_node"]], "_set_seed() (netin.models.model method)": [[4, "netin.models.Model._set_seed"]], "_simulate() (netin.models.directedmodel method)": [[4, "netin.models.DirectedModel._simulate"]], "_simulate() (netin.models.model method)": [[4, "netin.models.Model._simulate"]], "_simulate() (netin.models.undirectedmodel method)": [[4, "netin.models.UndirectedModel._simulate"]], "compute_target_probabilities() (netin.models.model method)": [[4, "netin.models.Model.compute_target_probabilities"]], "get_metadata() (netin.models.directedmodel method)": [[4, "netin.models.DirectedModel.get_metadata"]], "get_metadata() (netin.models.model method)": [[4, "netin.models.Model.get_metadata"]], "get_metadata() (netin.models.undirectedmodel method)": [[4, "netin.models.UndirectedModel.get_metadata"]], "initialize_simulation() (netin.models.model method)": [[4, "netin.models.Model.initialize_simulation"]], "preload_graph() (netin.models.directedmodel method)": [[4, "netin.models.DirectedModel.preload_graph"]], "preload_graph() (netin.models.model method)": [[4, "netin.models.Model.preload_graph"]], "preload_graph() (netin.models.undirectedmodel method)": [[4, "netin.models.UndirectedModel.preload_graph"]], "simulate() (netin.models.model method)": [[4, "netin.models.Model.simulate"]], "digraph (class in netin.graphs)": [[5, "netin.graphs.DiGraph"]], "events (netin.graphs.digraph attribute)": [[5, "netin.graphs.DiGraph.EVENTS"]], "events (netin.graphs.graph attribute)": [[5, "netin.graphs.Graph.EVENTS"]], "graph (class in netin.graphs)": [[5, "netin.graphs.Graph"]], "add_edge() (netin.graphs.digraph method)": [[5, "netin.graphs.DiGraph.add_edge"]], "add_edge() (netin.graphs.graph method)": [[5, "netin.graphs.Graph.add_edge"]], "add_node() (netin.graphs.digraph method)": [[5, "netin.graphs.DiGraph.add_node"]], "add_node() (netin.graphs.graph method)": [[5, "netin.graphs.Graph.add_node"]], "copy() (netin.graphs.digraph method)": [[5, "netin.graphs.DiGraph.copy"]], "copy() (netin.graphs.graph method)": [[5, "netin.graphs.Graph.copy"]], "degree() (netin.graphs.digraph method)": [[5, "netin.graphs.DiGraph.degree"]], "degree() (netin.graphs.graph method)": [[5, "netin.graphs.Graph.degree"]], "degrees() (netin.graphs.digraph method)": [[5, "netin.graphs.DiGraph.degrees"]], "degrees() (netin.graphs.graph method)": [[5, "netin.graphs.Graph.degrees"]], "edges() (netin.graphs.digraph method)": [[5, "netin.graphs.DiGraph.edges"]], "edges() (netin.graphs.graph method)": [[5, "netin.graphs.Graph.edges"]], "from_nxgraph() (netin.graphs.digraph class method)": [[5, "netin.graphs.DiGraph.from_nxgraph"]], "from_nxgraph() (netin.graphs.graph class method)": [[5, "netin.graphs.Graph.from_nxgraph"]], "get_metadata() (netin.graphs.digraph method)": [[5, "netin.graphs.DiGraph.get_metadata"]], "get_metadata() (netin.graphs.graph method)": [[5, "netin.graphs.Graph.get_metadata"]], "get_node_class() (netin.graphs.digraph method)": [[5, "netin.graphs.DiGraph.get_node_class"]], "get_node_class() (netin.graphs.graph method)": [[5, "netin.graphs.Graph.get_node_class"]], "get_node_classes() (netin.graphs.digraph method)": [[5, "netin.graphs.DiGraph.get_node_classes"]], "get_node_classes() (netin.graphs.graph method)": [[5, "netin.graphs.Graph.get_node_classes"]], "has_edge() (netin.graphs.digraph method)": [[5, "netin.graphs.DiGraph.has_edge"]], "has_edge() (netin.graphs.graph method)": [[5, "netin.graphs.Graph.has_edge"]], "has_node_class() (netin.graphs.digraph method)": [[5, "netin.graphs.DiGraph.has_node_class"]], "has_node_class() (netin.graphs.graph method)": [[5, "netin.graphs.Graph.has_node_class"]], "is_directed() (netin.graphs.digraph method)": [[5, "netin.graphs.DiGraph.is_directed"]], "is_directed() (netin.graphs.graph method)": [[5, "netin.graphs.Graph.is_directed"]], "neighbors() (netin.graphs.digraph method)": [[5, "netin.graphs.DiGraph.neighbors"]], "neighbors() (netin.graphs.graph method)": [[5, "netin.graphs.Graph.neighbors"]], "nodes() (netin.graphs.digraph method)": [[5, "netin.graphs.DiGraph.nodes"]], "nodes() (netin.graphs.graph method)": [[5, "netin.graphs.Graph.nodes"]], "number_of_edges() (netin.graphs.digraph method)": [[5, "netin.graphs.DiGraph.number_of_edges"]], "number_of_edges() (netin.graphs.graph method)": [[5, "netin.graphs.Graph.number_of_edges"]], "number_of_nodes() (netin.graphs.digraph method)": [[5, "netin.graphs.DiGraph.number_of_nodes"]], "number_of_nodes() (netin.graphs.graph method)": [[5, "netin.graphs.Graph.number_of_nodes"]], "register_event_handler() (netin.graphs.digraph method)": [[5, "netin.graphs.DiGraph.register_event_handler"]], "register_event_handler() (netin.graphs.graph method)": [[5, "netin.graphs.Graph.register_event_handler"]], "remove_event_handler() (netin.graphs.digraph method)": [[5, "netin.graphs.DiGraph.remove_event_handler"]], "remove_event_handler() (netin.graphs.graph method)": [[5, "netin.graphs.Graph.remove_event_handler"]], "set_node_class() (netin.graphs.digraph method)": [[5, "netin.graphs.DiGraph.set_node_class"]], "set_node_class() (netin.graphs.graph method)": [[5, "netin.graphs.Graph.set_node_class"]], "to_nxgraph() (netin.graphs.digraph method)": [[5, "netin.graphs.DiGraph.to_nxgraph"]], "to_nxgraph() (netin.graphs.graph method)": [[5, "netin.graphs.Graph.to_nxgraph"]], "trigger_event() (netin.graphs.digraph method)": [[5, "netin.graphs.DiGraph.trigger_event"]], "trigger_event() (netin.graphs.graph method)": [[5, "netin.graphs.Graph.trigger_event"]], "module": [[6, "module-netin"], [12, "module-netin.stats.distributions"], [12, "module-netin.stats.networks"], [12, "module-netin.stats.ranking"], [14, "module-netin.viz.handlers"]], "netin": [[6, "module-netin"]], "dhmodel (class in netin.models)": [[7, "netin.models.DHModel"]], "dpahmodel (class in netin.models)": [[7, "netin.models.DPAHModel"]], "dpamodel (class in netin.models)": [[7, "netin.models.DPAModel"]], "events (netin.models.dhmodel attribute)": [[7, "netin.models.DHModel.EVENTS"]], "events (netin.models.dpahmodel attribute)": [[7, "netin.models.DPAHModel.EVENTS"]], "events (netin.models.dpamodel attribute)": [[7, "netin.models.DPAModel.EVENTS"]], "short (netin.models.dhmodel attribute)": [[7, "netin.models.DHModel.SHORT"]], "short (netin.models.dpahmodel attribute)": [[7, "netin.models.DPAHModel.SHORT"]], "short (netin.models.dpamodel attribute)": [[7, "netin.models.DPAModel.SHORT"]], "compute_target_probabilities() (netin.models.dhmodel method)": [[7, "netin.models.DHModel.compute_target_probabilities"]], "compute_target_probabilities() (netin.models.dpahmodel method)": [[7, "netin.models.DPAHModel.compute_target_probabilities"]], "compute_target_probabilities() (netin.models.dpamodel method)": [[7, "netin.models.DPAModel.compute_target_probabilities"]], "get_metadata() (netin.models.dhmodel method)": [[7, "netin.models.DHModel.get_metadata"]], "get_metadata() (netin.models.dpahmodel method)": [[7, "netin.models.DPAHModel.get_metadata"]], "get_metadata() (netin.models.dpamodel method)": [[7, "netin.models.DPAModel.get_metadata"]], "initialize_simulation() (netin.models.dhmodel method)": [[7, "netin.models.DHModel.initialize_simulation"]], "initialize_simulation() (netin.models.dpahmodel method)": [[7, "netin.models.DPAHModel.initialize_simulation"]], "initialize_simulation() (netin.models.dpamodel method)": [[7, "netin.models.DPAModel.initialize_simulation"]], "preload_graph() (netin.models.dhmodel method)": [[7, "netin.models.DHModel.preload_graph"]], "preload_graph() (netin.models.dpahmodel method)": [[7, "netin.models.DPAHModel.preload_graph"]], "preload_graph() (netin.models.dpamodel method)": [[7, "netin.models.DPAModel.preload_graph"]], "register_event_handler() (netin.models.dhmodel method)": [[7, "netin.models.DHModel.register_event_handler"]], "register_event_handler() (netin.models.dpahmodel method)": [[7, "netin.models.DPAHModel.register_event_handler"]], "register_event_handler() (netin.models.dpamodel method)": [[7, "netin.models.DPAModel.register_event_handler"]], "remove_event_handler() (netin.models.dhmodel method)": [[7, "netin.models.DHModel.remove_event_handler"]], "remove_event_handler() (netin.models.dpahmodel method)": [[7, "netin.models.DPAHModel.remove_event_handler"]], "remove_event_handler() (netin.models.dpamodel method)": [[7, "netin.models.DPAModel.remove_event_handler"]], "simulate() (netin.models.dhmodel method)": [[7, "netin.models.DHModel.simulate"]], "simulate() (netin.models.dpahmodel method)": [[7, "netin.models.DPAHModel.simulate"]], "simulate() (netin.models.dpamodel method)": [[7, "netin.models.DPAModel.simulate"]], "trigger_event() (netin.models.dhmodel method)": [[7, "netin.models.DHModel.trigger_event"]], "trigger_event() (netin.models.dpahmodel method)": [[7, "netin.models.DPAHModel.trigger_event"]], "trigger_event() (netin.models.dpamodel method)": [[7, "netin.models.DPAModel.trigger_event"]], "barabasialbertmodel (class in netin.models)": [[9, "netin.models.BarabasiAlbertModel"]], "compoundlfm (class in netin.models)": [[9, "netin.models.CompoundLFM"]], "events (netin.models.barabasialbertmodel attribute)": [[9, "netin.models.BarabasiAlbertModel.EVENTS"]], "events (netin.models.homophilymodel attribute)": [[9, "netin.models.HomophilyModel.EVENTS"]], "events (netin.models.pahmodel attribute)": [[9, "netin.models.PAHModel.EVENTS"]], "events (netin.models.patchmodel attribute)": [[9, "netin.models.PATCHModel.EVENTS"]], "homophily (netin.models.compoundlfm attribute)": [[9, "netin.models.CompoundLFM.HOMOPHILY"]], "homophilymodel (class in netin.models)": [[9, "netin.models.HomophilyModel"]], "pah (netin.models.compoundlfm attribute)": [[9, "netin.models.CompoundLFM.PAH"]], "pahmodel (class in netin.models)": [[9, "netin.models.PAHModel"]], "patchmodel (class in netin.models)": [[9, "netin.models.PATCHModel"]], "short (netin.models.barabasialbertmodel attribute)": [[9, "netin.models.BarabasiAlbertModel.SHORT"]], "short (netin.models.homophilymodel attribute)": [[9, "netin.models.HomophilyModel.SHORT"]], "short (netin.models.pahmodel attribute)": [[9, "netin.models.PAHModel.SHORT"]], "short (netin.models.patchmodel attribute)": [[9, "netin.models.PATCHModel.SHORT"]], "uniform (netin.models.compoundlfm attribute)": [[9, "netin.models.CompoundLFM.UNIFORM"]], "compute_target_probabilities() (netin.models.barabasialbertmodel method)": [[9, "netin.models.BarabasiAlbertModel.compute_target_probabilities"]], "compute_target_probabilities() (netin.models.homophilymodel method)": [[9, "netin.models.HomophilyModel.compute_target_probabilities"]], "compute_target_probabilities() (netin.models.pahmodel method)": [[9, "netin.models.PAHModel.compute_target_probabilities"]], "compute_target_probabilities() (netin.models.patchmodel method)": [[9, "netin.models.PATCHModel.compute_target_probabilities"]], "get_metadata() (netin.models.barabasialbertmodel method)": [[9, "netin.models.BarabasiAlbertModel.get_metadata"]], "get_metadata() (netin.models.homophilymodel method)": [[9, "netin.models.HomophilyModel.get_metadata"]], "get_metadata() (netin.models.pahmodel method)": [[9, "netin.models.PAHModel.get_metadata"]], "get_metadata() (netin.models.patchmodel method)": [[9, "netin.models.PATCHModel.get_metadata"]], "initialize_simulation() (netin.models.barabasialbertmodel method)": [[9, "netin.models.BarabasiAlbertModel.initialize_simulation"]], "initialize_simulation() (netin.models.homophilymodel method)": [[9, "netin.models.HomophilyModel.initialize_simulation"]], "initialize_simulation() (netin.models.pahmodel method)": [[9, "netin.models.PAHModel.initialize_simulation"]], "initialize_simulation() (netin.models.patchmodel method)": [[9, "netin.models.PATCHModel.initialize_simulation"]], "preload_graph() (netin.models.barabasialbertmodel method)": [[9, "netin.models.BarabasiAlbertModel.preload_graph"]], "preload_graph() (netin.models.homophilymodel method)": [[9, "netin.models.HomophilyModel.preload_graph"]], "preload_graph() (netin.models.pahmodel method)": [[9, "netin.models.PAHModel.preload_graph"]], "preload_graph() (netin.models.patchmodel method)": [[9, "netin.models.PATCHModel.preload_graph"]], "register_event_handler() (netin.models.barabasialbertmodel method)": [[9, "netin.models.BarabasiAlbertModel.register_event_handler"]], "register_event_handler() (netin.models.homophilymodel method)": [[9, "netin.models.HomophilyModel.register_event_handler"]], "register_event_handler() (netin.models.pahmodel method)": [[9, "netin.models.PAHModel.register_event_handler"]], "register_event_handler() (netin.models.patchmodel method)": [[9, "netin.models.PATCHModel.register_event_handler"]], "remove_event_handler() (netin.models.barabasialbertmodel method)": [[9, "netin.models.BarabasiAlbertModel.remove_event_handler"]], "remove_event_handler() (netin.models.homophilymodel method)": [[9, "netin.models.HomophilyModel.remove_event_handler"]], "remove_event_handler() (netin.models.pahmodel method)": [[9, "netin.models.PAHModel.remove_event_handler"]], "remove_event_handler() (netin.models.patchmodel method)": [[9, "netin.models.PATCHModel.remove_event_handler"]], "simulate() (netin.models.barabasialbertmodel method)": [[9, "netin.models.BarabasiAlbertModel.simulate"]], "simulate() (netin.models.homophilymodel method)": [[9, "netin.models.HomophilyModel.simulate"]], "simulate() (netin.models.pahmodel method)": [[9, "netin.models.PAHModel.simulate"]], "simulate() (netin.models.patchmodel method)": [[9, "netin.models.PATCHModel.simulate"]], "trigger_event() (netin.models.barabasialbertmodel method)": [[9, "netin.models.BarabasiAlbertModel.trigger_event"]], "trigger_event() (netin.models.homophilymodel method)": [[9, "netin.models.HomophilyModel.trigger_event"]], "trigger_event() (netin.models.pahmodel method)": [[9, "netin.models.PAHModel.trigger_event"]], "trigger_event() (netin.models.patchmodel method)": [[9, "netin.models.PATCHModel.trigger_event"]], "binaryclassnodevector (class in netin.graphs)": [[10, "netin.graphs.BinaryClassNodeVector"]], "categoricalnodevector (class in netin.graphs)": [[10, "netin.graphs.CategoricalNodeVector"]], "nodevector (class in netin.graphs)": [[10, "netin.graphs.NodeVector"]], "append_other() (netin.graphs.binaryclassnodevector method)": [[10, "netin.graphs.BinaryClassNodeVector.append_other"]], "append_other() (netin.graphs.categoricalnodevector method)": [[10, "netin.graphs.CategoricalNodeVector.append_other"]], "append_other() (netin.graphs.nodevector method)": [[10, "netin.graphs.NodeVector.append_other"]], "copy() (netin.graphs.binaryclassnodevector method)": [[10, "netin.graphs.BinaryClassNodeVector.copy"]], "copy() (netin.graphs.categoricalnodevector method)": [[10, "netin.graphs.CategoricalNodeVector.copy"]], "copy() (netin.graphs.nodevector method)": [[10, "netin.graphs.NodeVector.copy"]], "from_fraction() (netin.graphs.binaryclassnodevector class method)": [[10, "netin.graphs.BinaryClassNodeVector.from_fraction"]], "from_ndarray() (netin.graphs.binaryclassnodevector class method)": [[10, "netin.graphs.BinaryClassNodeVector.from_ndarray"]], "from_ndarray() (netin.graphs.categoricalnodevector class method)": [[10, "netin.graphs.CategoricalNodeVector.from_ndarray"]], "from_ndarray() (netin.graphs.nodevector class method)": [[10, "netin.graphs.NodeVector.from_ndarray"]], "get_class_values() (netin.graphs.binaryclassnodevector method)": [[10, "netin.graphs.BinaryClassNodeVector.get_class_values"]], "get_class_values() (netin.graphs.categoricalnodevector method)": [[10, "netin.graphs.CategoricalNodeVector.get_class_values"]], "get_majority_mask() (netin.graphs.binaryclassnodevector method)": [[10, "netin.graphs.BinaryClassNodeVector.get_majority_mask"]], "get_metadata() (netin.graphs.binaryclassnodevector method)": [[10, "netin.graphs.BinaryClassNodeVector.get_metadata"]], "get_metadata() (netin.graphs.categoricalnodevector method)": [[10, "netin.graphs.CategoricalNodeVector.get_metadata"]], "get_metadata() (netin.graphs.nodevector method)": [[10, "netin.graphs.NodeVector.get_metadata"]], "get_minority_mask() (netin.graphs.binaryclassnodevector method)": [[10, "netin.graphs.BinaryClassNodeVector.get_minority_mask"]], "get_n_majority() (netin.graphs.binaryclassnodevector method)": [[10, "netin.graphs.BinaryClassNodeVector.get_n_majority"]], "get_n_minority() (netin.graphs.binaryclassnodevector method)": [[10, "netin.graphs.BinaryClassNodeVector.get_n_minority"]], "get_values() (netin.graphs.binaryclassnodevector method)": [[10, "netin.graphs.BinaryClassNodeVector.get_values"]], "get_values() (netin.graphs.categoricalnodevector method)": [[10, "netin.graphs.CategoricalNodeVector.get_values"]], "get_values() (netin.graphs.nodevector method)": [[10, "netin.graphs.NodeVector.get_values"]], "set_values() (netin.graphs.binaryclassnodevector method)": [[10, "netin.graphs.BinaryClassNodeVector.set_values"]], "set_values() (netin.graphs.categoricalnodevector method)": [[10, "netin.graphs.CategoricalNodeVector.set_values"]], "set_values() (netin.graphs.nodevector method)": [[10, "netin.graphs.NodeVector.set_values"]], "sum() (netin.graphs.binaryclassnodevector method)": [[10, "netin.graphs.BinaryClassNodeVector.sum"]], "sum() (netin.graphs.categoricalnodevector method)": [[10, "netin.graphs.CategoricalNodeVector.sum"]], "sum() (netin.graphs.nodevector method)": [[10, "netin.graphs.NodeVector.sum"]], "vals() (netin.graphs.binaryclassnodevector method)": [[10, "netin.graphs.BinaryClassNodeVector.vals"]], "vals() (netin.graphs.categoricalnodevector method)": [[10, "netin.graphs.CategoricalNodeVector.vals"]], "vals() (netin.graphs.nodevector method)": [[10, "netin.graphs.NodeVector.vals"]], "compute_node_stats() (in module netin.stats.networks)": [[12, "netin.stats.networks.compute_node_stats"]], "fit_power_law() (in module netin.stats.distributions)": [[12, "netin.stats.distributions.fit_power_law"]], "fit_powerlaw_groups() (in module netin.stats.distributions)": [[12, "netin.stats.distributions.fit_powerlaw_groups"]], "get_average_degree() (in module netin.stats.networks)": [[12, "netin.stats.networks.get_average_degree"]], "get_average_degrees() (in module netin.stats.networks)": [[12, "netin.stats.networks.get_average_degrees"]], "get_ccdf() (in module netin.stats.distributions)": [[12, "netin.stats.distributions.get_ccdf"]], "get_cdf() (in module netin.stats.distributions)": [[12, "netin.stats.distributions.get_cdf"]], "get_disparity() (in module netin.stats.distributions)": [[12, "netin.stats.distributions.get_disparity"]], "get_edge_type_counts() (in module netin.stats.networks)": [[12, "netin.stats.networks.get_edge_type_counts"]], "get_fraction_of_minority() (in module netin.stats.distributions)": [[12, "netin.stats.distributions.get_fraction_of_minority"]], "get_fraction_of_minority_in_ranking() (in module netin.stats.ranking)": [[12, "netin.stats.ranking.get_fraction_of_minority_in_ranking"]], "get_gini_coefficient() (in module netin.stats.distributions)": [[12, "netin.stats.distributions.get_gini_coefficient"]], "get_gini_in_ranking() (in module netin.stats.ranking)": [[12, "netin.stats.ranking.get_gini_in_ranking"]], "get_min_degree() (in module netin.stats.networks)": [[12, "netin.stats.networks.get_min_degree"]], "get_minority_fraction() (in module netin.stats.networks)": [[12, "netin.stats.networks.get_minority_fraction"]], "get_node_attributes() (in module netin.stats.networks)": [[12, "netin.stats.networks.get_node_attributes"]], "get_node_metadata_as_dataframe() (in module netin.stats.networks)": [[12, "netin.stats.networks.get_node_metadata_as_dataframe"]], "get_pdf() (in module netin.stats.distributions)": [[12, "netin.stats.distributions.get_pdf"]], "get_ranking_inequality() (in module netin.stats.ranking)": [[12, "netin.stats.ranking.get_ranking_inequality"]], "get_ranking_inequality_class() (in module netin.stats.ranking)": [[12, "netin.stats.ranking.get_ranking_inequality_class"]], "get_ranking_inequity() (in module netin.stats.ranking)": [[12, "netin.stats.ranking.get_ranking_inequity"]], "get_ranking_inequity_class() (in module netin.stats.ranking)": [[12, "netin.stats.ranking.get_ranking_inequity_class"]], "get_similitude() (in module netin.stats.networks)": [[12, "netin.stats.networks.get_similitude"]], "gini() (in module netin.stats.ranking)": [[12, "netin.stats.ranking.gini"]], "netin.stats.distributions": [[12, "module-netin.stats.distributions"]], "netin.stats.networks": [[12, "module-netin.stats.networks"]], "netin.stats.ranking": [[12, "module-netin.stats.ranking"]], "simulationtimer (class in netin.utils)": [[13, "netin.utils.SimulationTimer"]], "get_time() (netin.utils.simulationtimer method)": [[13, "netin.utils.SimulationTimer.get_time"]], "netin.viz.handlers": [[14, "module-netin.viz.handlers"]], "plot_disparity() (in module netin.viz.handlers)": [[14, "netin.viz.handlers.plot_disparity"]], "plot_distribution() (in module netin.viz.handlers)": [[14, "netin.viz.handlers.plot_distribution"]], "plot_fraction_of_minority() (in module netin.viz.handlers)": [[14, "netin.viz.handlers.plot_fraction_of_minority"]], "plot_gini_coefficient() (in module netin.viz.handlers)": [[14, "netin.viz.handlers.plot_gini_coefficient"]], "plot_graph() (in module netin.viz.handlers)": [[14, "netin.viz.handlers.plot_graph"]], "plot_powerlaw_fit() (in module netin.viz.handlers)": [[14, "netin.viz.handlers.plot_powerlaw_fit"]], "reset_style() (in module netin.viz.handlers)": [[14, "netin.viz.handlers.reset_style"]], "set_paper_style() (in module netin.viz.handlers)": [[14, "netin.viz.handlers.set_paper_style"]]}})